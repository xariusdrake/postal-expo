{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/node_modules/@react-native-community/segmented-control/js/SegmentedControlTab.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport var SegmentedControlTab = function SegmentedControlTab(_ref) {\n  var onSelect = _ref.onSelect,\n      value = _ref.value,\n      enabled = _ref.enabled,\n      selected = _ref.selected,\n      tintColor = _ref.tintColor,\n      textColor = _ref.textColor,\n      activeTextColor = _ref.activeTextColor,\n      fontSize = _ref.fontSize;\n\n  var getColor = function getColor() {\n    if (selected && activeTextColor) {\n      return activeTextColor;\n    }\n\n    if (textColor) {\n      return textColor;\n    }\n\n    if (tintColor) {\n      return tintColor;\n    }\n\n    return 'black';\n  };\n\n  var color = getColor();\n  return React.createElement(TouchableOpacity, {\n    style: styles.container,\n    disabled: !enabled,\n    onPress: onSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.default],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [{\n      color: color\n    }, !(fontSize == null) && {\n      fontSize: fontSize\n    }, selected && styles.activeText],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, value)));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderRadius: 5\n  },\n  default: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 2,\n    borderRadius: 5\n  },\n  activeText: {\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/node_modules/@react-native-community/segmented-control/js/SegmentedControlTab.js"],"names":["React","SegmentedControlTab","onSelect","value","enabled","selected","tintColor","textColor","activeTextColor","fontSize","getColor","color","styles","container","default","activeText","StyleSheet","create","flex","borderRadius","justifyContent","alignItems","margin","fontWeight"],"mappings":"AAIA;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAcA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAStB;AAAA,MARXC,QAQW,QARXA,QAQW;AAAA,MAPXC,KAOW,QAPXA,KAOW;AAAA,MANXC,OAMW,QANXA,OAMW;AAAA,MALXC,QAKW,QALXA,QAKW;AAAA,MAJXC,SAIW,QAJXA,SAIW;AAAA,MAHXC,SAGW,QAHXA,SAGW;AAAA,MAFXC,eAEW,QAFXA,eAEW;AAAA,MADXC,QACW,QADXA,QACW;;AACX,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAIL,QAAQ,IAAIG,eAAhB,EAAiC;AAC/B,aAAOA,eAAP;AACD;;AACD,QAAID,SAAJ,EAAe;AACb,aAAOA,SAAP;AACD;;AACD,QAAID,SAAJ,EAAe;AACb,aAAOA,SAAP;AACD;;AACD,WAAO,OAAP;AACD,GAXD;;AAYA,MAAMK,KAAK,GAAGD,QAAQ,EAAtB;AAEA,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEE,MAAM,CAACC,SADhB;AAEE,IAAA,QAAQ,EAAE,CAACT,OAFb;AAGE,IAAA,OAAO,EAAEF,QAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACU,MAAM,CAACE,OAAR,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACL;AAACH,MAAAA,KAAK,EAALA;AAAD,KADK,EAEL,EAAEF,QAAQ,IAAI,IAAd,KAAuB;AAACA,MAAAA,QAAQ,EAARA;AAAD,KAFlB,EAGLJ,QAAQ,IAAIO,MAAM,CAACG,UAHd,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGZ,KANH,CADF,CAJF,CADF;AAiBD,CAzCM;AA2CP,IAAMS,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AAACK,IAAAA,IAAI,EAAE,CAAP;AAAUC,IAAAA,YAAY,EAAE;AAAxB,GADoB;AAE/BL,EAAAA,OAAO,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPE,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,MAAM,EAAE,CAJD;AAKPH,IAAAA,YAAY,EAAE;AALP,GAFsB;AAS/BJ,EAAAA,UAAU,EAAE;AACVQ,IAAAA,UAAU,EAAE;AADF;AATmB,CAAlB,CAAf","sourcesContent":["/**\n * @flow\n */\n\n'use strict';\n\nimport * as React from 'react';\nimport {StyleSheet, View, Text, TouchableOpacity} from 'react-native';\n\ntype Props = $ReadOnly<{|\n  value: string,\n  tintColor?: ?string,\n  textColor?: ?string,\n  activeTextColor?: ?string,\n  onSelect: () => void,\n  selected: boolean,\n  enabled: boolean,\n  fontSize?: ?number,\n|}>;\n\nexport const SegmentedControlTab = ({\n  onSelect,\n  value,\n  enabled,\n  selected,\n  tintColor,\n  textColor,\n  activeTextColor,\n  fontSize,\n}: Props) => {\n  const getColor = () => {\n    if (selected && activeTextColor) {\n      return activeTextColor;\n    }\n    if (textColor) {\n      return textColor;\n    }\n    if (tintColor) {\n      return tintColor;\n    }\n    return 'black';\n  };\n  const color = getColor();\n\n  return (\n    <TouchableOpacity\n      style={styles.container}\n      disabled={!enabled}\n      onPress={onSelect}>\n      <View style={[styles.default]}>\n        <Text\n          style={[\n            {color},\n            !(fontSize == null) && {fontSize},\n            selected && styles.activeText,\n          ]}>\n          {value}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {flex: 1, borderRadius: 5},\n  default: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 2,\n    borderRadius: 5,\n  },\n  activeText: {\n    fontWeight: '700',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}