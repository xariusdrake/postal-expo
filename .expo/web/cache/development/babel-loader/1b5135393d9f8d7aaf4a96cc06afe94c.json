{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, memo, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useTheme } from \"./CountryTheme\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nvar borderBottomWidth = 2 / PixelRatio.get();\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  letters: {\n    marginRight: 10,\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letter: {\n    height: 23,\n    width: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  letterText: {\n    textAlign: 'center'\n  },\n  itemCountry: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingHorizontal: 5\n  },\n  itemCountryName: {\n    width: '90%'\n  },\n  list: {\n    flex: 1\n  },\n  sep: {\n    borderBottomWidth: borderBottomWidth,\n    width: '100%'\n  }\n});\n\nvar Letter = function Letter(_ref) {\n  var letter = _ref.letter,\n      scrollTo = _ref.scrollTo;\n\n  var _useTheme = useTheme(),\n      fontSize = _useTheme.fontSize,\n      activeOpacity = _useTheme.activeOpacity;\n\n  return React.createElement(TouchableOpacity, _extends({\n    testID: \"letter-\" + letter,\n    key: letter,\n    onPress: function onPress() {\n      return scrollTo(letter);\n    }\n  }, {\n    activeOpacity: activeOpacity\n  }), React.createElement(View, {\n    style: styles.letter\n  }, React.createElement(CountryText, {\n    style: [styles.letterText, {\n      fontSize: fontSize * 0.8\n    }],\n    allowFontScaling: false\n  }, letter)));\n};\n\nvar CountryItem = function CountryItem(props) {\n  var _useTheme2 = useTheme(),\n      activeOpacity = _useTheme2.activeOpacity,\n      itemHeight = _useTheme2.itemHeight,\n      flagSize = _useTheme2.flagSize;\n\n  var country = props.country,\n      onSelect = props.onSelect,\n      withFlag = props.withFlag,\n      withEmoji = props.withEmoji,\n      withCallingCode = props.withCallingCode,\n      withCurrency = props.withCurrency;\n  var extraContent = [];\n\n  if (withCallingCode && country.callingCode && country.callingCode.length > 0) {\n    extraContent.push(\"+\" + country.callingCode.join('|'));\n  }\n\n  if (withCurrency && country.currency && country.currency.length > 0) {\n    extraContent.push(country.currency.join('|'));\n  }\n\n  return React.createElement(TouchableOpacity, _extends({\n    key: country.cca2,\n    testID: \"country-selector-\" + country.cca2,\n    onPress: function onPress() {\n      return onSelect(country);\n    }\n  }, {\n    activeOpacity: activeOpacity\n  }), React.createElement(View, {\n    style: [styles.itemCountry, {\n      height: itemHeight\n    }]\n  }, withFlag && React.createElement(Flag, _extends({}, {\n    withEmoji: withEmoji,\n    countryCode: country.cca2,\n    flagSize: flagSize\n  })), React.createElement(View, {\n    style: styles.itemCountryName\n  }, React.createElement(CountryText, {\n    allowFontScaling: false,\n    numberOfLines: 2,\n    ellipsizeMode: 'tail'\n  }, country.name, extraContent.length > 0 && \" (\" + extraContent.join(', ') + \")\"))));\n};\n\nCountryItem.defaultProps = {\n  withFlag: true,\n  withCallingCode: false\n};\nvar MemoCountryItem = memo(CountryItem);\n\nvar renderItem = function renderItem(props) {\n  return function (_ref2) {\n    var country = _ref2.item;\n    return React.createElement(MemoCountryItem, _extends({}, _objectSpread({\n      country: country\n    }, props)));\n  };\n};\n\nvar keyExtractor = function keyExtractor(item) {\n  return item.cca2;\n};\n\nvar ItemSeparatorComponent = function ItemSeparatorComponent() {\n  var _useTheme3 = useTheme(),\n      primaryColorVariant = _useTheme3.primaryColorVariant;\n\n  return React.createElement(View, {\n    style: [styles.sep, {\n      borderBottomColor: primaryColorVariant\n    }]\n  });\n};\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nexport var CountryList = function CountryList(props) {\n  var data = props.data,\n      withAlphaFilter = props.withAlphaFilter,\n      withEmoji = props.withEmoji,\n      withFlag = props.withFlag,\n      withCallingCode = props.withCallingCode,\n      withCurrency = props.withCurrency,\n      onSelect = props.onSelect,\n      filter = props.filter,\n      flatListProps = props.flatListProps,\n      filterFocus = props.filterFocus;\n  var flatListRef = useRef(null);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      letter = _useState2[0],\n      setLetter = _useState2[1];\n\n  var _useTheme4 = useTheme(),\n      itemHeight = _useTheme4.itemHeight,\n      backgroundColor = _useTheme4.backgroundColor;\n\n  var indexLetter = data.map(function (country) {\n    return country.name.substr(0, 1);\n  }).join('');\n\n  var scrollTo = function scrollTo(letter) {\n    var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var index = indexLetter.indexOf(letter);\n    setLetter(letter);\n\n    if (flatListRef.current) {\n      flatListRef.current.scrollToIndex({\n        animated: animated,\n        index: index\n      });\n    }\n  };\n\n  var onScrollToIndexFailed = function onScrollToIndexFailed(_info) {\n    if (flatListRef.current) {\n      flatListRef.current.scrollToEnd();\n      scrollTo(letter);\n    }\n  };\n\n  var _useContext = useContext(),\n      search = _useContext.search,\n      getLetters = _useContext.getLetters;\n\n  var letters = getLetters(data);\n  useEffect(function () {\n    if (data && data.length > 0 && filterFocus && !filter) {\n      scrollTo(letters[0], false);\n    }\n  }, [filterFocus]);\n  var initialNumToRender = Math.round(height / (itemHeight || 1));\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: backgroundColor\n    }]\n  }, React.createElement(FlatList, _extends({\n    onScrollToIndexFailed: true,\n    ref: flatListRef,\n    testID: 'list-countries',\n    keyboardShouldPersistTaps: 'handled',\n    automaticallyAdjustContentInsets: false,\n    scrollEventThrottle: 1,\n    getItemLayout: function getItemLayout(_data, index) {\n      return {\n        length: itemHeight + borderBottomWidth,\n        offset: (itemHeight + borderBottomWidth) * index,\n        index: index\n      };\n    },\n    renderItem: renderItem({\n      withEmoji: withEmoji,\n      withFlag: withFlag,\n      withCallingCode: withCallingCode,\n      withCurrency: withCurrency,\n      onSelect: onSelect\n    })\n  }, {\n    data: search(filter, data),\n    keyExtractor: keyExtractor,\n    onScrollToIndexFailed: onScrollToIndexFailed,\n    ItemSeparatorComponent: ItemSeparatorComponent,\n    initialNumToRender: initialNumToRender\n  }, flatListProps)), withAlphaFilter && React.createElement(ScrollView, {\n    contentContainerStyle: styles.letters,\n    keyboardShouldPersistTaps: 'always'\n  }, letters.map(function (letter) {\n    return React.createElement(Letter, _extends({\n      key: letter\n    }, {\n      letter: letter,\n      scrollTo: scrollTo\n    }));\n  })));\n};\nCountryList.defaultProps = {\n  filterFocus: undefined\n};","map":{"version":3,"sources":["../src/CountryList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useRef, memo, useState, useEffect } from 'react';\nimport { StyleSheet, View, FlatList, ScrollView, TouchableOpacity, PixelRatio, Dimensions, } from 'react-native';\nimport { useTheme } from './CountryTheme';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nconst borderBottomWidth = 2 / PixelRatio.get();\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    letters: {\n        marginRight: 10,\n        backgroundColor: 'transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letter: {\n        height: 23,\n        width: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    letterText: {\n        textAlign: 'center',\n    },\n    itemCountry: {\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        paddingHorizontal: 5,\n    },\n    itemCountryName: {\n        width: '90%',\n    },\n    list: {\n        flex: 1,\n    },\n    sep: {\n        borderBottomWidth,\n        width: '100%',\n    },\n});\nconst Letter = ({ letter, scrollTo }) => {\n    const { fontSize, activeOpacity } = useTheme();\n    return (React.createElement(TouchableOpacity, Object.assign({ testID: `letter-${letter}`, key: letter, onPress: () => scrollTo(letter) }, { activeOpacity }),\n        React.createElement(View, { style: styles.letter },\n            React.createElement(CountryText, { style: [styles.letterText, { fontSize: fontSize * 0.8 }], allowFontScaling: false }, letter))));\n};\nconst CountryItem = (props) => {\n    const { activeOpacity, itemHeight, flagSize } = useTheme();\n    const { country, onSelect, withFlag, withEmoji, withCallingCode, withCurrency, } = props;\n    const extraContent = [];\n    if (withCallingCode &&\n        country.callingCode &&\n        country.callingCode.length > 0) {\n        extraContent.push(`+${country.callingCode.join('|')}`);\n    }\n    if (withCurrency && country.currency && country.currency.length > 0) {\n        extraContent.push(country.currency.join('|'));\n    }\n    return (React.createElement(TouchableOpacity, Object.assign({ key: country.cca2, testID: `country-selector-${country.cca2}`, onPress: () => onSelect(country) }, { activeOpacity }),\n        React.createElement(View, { style: [styles.itemCountry, { height: itemHeight }] },\n            withFlag && (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode: country.cca2, flagSize: flagSize }))),\n            React.createElement(View, { style: styles.itemCountryName },\n                React.createElement(CountryText, { allowFontScaling: false, numberOfLines: 2, ellipsizeMode: 'tail' },\n                    country.name,\n                    extraContent.length > 0 && ` (${extraContent.join(', ')})`)))));\n};\nCountryItem.defaultProps = {\n    withFlag: true,\n    withCallingCode: false,\n};\nconst MemoCountryItem = memo(CountryItem);\nconst renderItem = (props) => ({ item: country, }) => (React.createElement(MemoCountryItem, Object.assign({}, { country, ...props })));\nconst keyExtractor = (item) => item.cca2;\nconst ItemSeparatorComponent = () => {\n    const { primaryColorVariant } = useTheme();\n    return (React.createElement(View, { style: [styles.sep, { borderBottomColor: primaryColorVariant }] }));\n};\nconst { height } = Dimensions.get('window');\nexport const CountryList = (props) => {\n    const { data, withAlphaFilter, withEmoji, withFlag, withCallingCode, withCurrency, onSelect, filter, flatListProps, filterFocus, } = props;\n    const flatListRef = useRef(null);\n    const [letter, setLetter] = useState('');\n    const { itemHeight, backgroundColor } = useTheme();\n    const indexLetter = data\n        .map((country) => country.name.substr(0, 1))\n        .join('');\n    const scrollTo = (letter, animated = true) => {\n        const index = indexLetter.indexOf(letter);\n        setLetter(letter);\n        if (flatListRef.current) {\n            flatListRef.current.scrollToIndex({ animated, index });\n        }\n    };\n    const onScrollToIndexFailed = (_info) => {\n        if (flatListRef.current) {\n            flatListRef.current.scrollToEnd();\n            scrollTo(letter);\n        }\n    };\n    const { search, getLetters } = useContext();\n    const letters = getLetters(data);\n    useEffect(() => {\n        if (data && data.length > 0 && filterFocus && !filter) {\n            scrollTo(letters[0], false);\n        }\n    }, [filterFocus]);\n    const initialNumToRender = Math.round(height / (itemHeight || 1));\n    return (React.createElement(View, { style: [styles.container, { backgroundColor }] },\n        React.createElement(FlatList, Object.assign({ onScrollToIndexFailed: true, ref: flatListRef, testID: 'list-countries', keyboardShouldPersistTaps: 'handled', automaticallyAdjustContentInsets: false, scrollEventThrottle: 1, getItemLayout: (_data, index) => ({\n                length: itemHeight + borderBottomWidth,\n                offset: (itemHeight + borderBottomWidth) * index,\n                index,\n            }), renderItem: renderItem({\n                withEmoji,\n                withFlag,\n                withCallingCode,\n                withCurrency,\n                onSelect,\n            }) }, {\n            data: search(filter, data),\n            keyExtractor,\n            onScrollToIndexFailed,\n            ItemSeparatorComponent,\n            initialNumToRender,\n        }, flatListProps)),\n        withAlphaFilter && (React.createElement(ScrollView, { contentContainerStyle: styles.letters, keyboardShouldPersistTaps: 'always' }, letters.map(letter => (React.createElement(Letter, Object.assign({ key: letter }, { letter, scrollTo }))))))));\n};\nCountryList.defaultProps = {\n    filterFocus: undefined,\n};\n//# sourceMappingURL=CountryList.js.map"]},"metadata":{},"sourceType":"module"}