{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/xrs/DATA/Project/postalvn/postal-mobile/components/toggleButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { AppLoading } from 'expo';\nimport { useFonts } from '@expo-google-fonts/capriola';\nimport { FontAwesome } from '@expo/vector-icons';\nvar blueDark = '#033C47';\nvar mintLight = '#D5EFE8';\nvar mint = '#0469c1';\nvar grayMedium = '#879299';\nvar graySuperLight = '#f4f4f4';\nvar greyLight = '#d8d8d8';\n\nvar ToggleButton = function ToggleButton(_ref) {\n  var onPress = _ref.onPress,\n      title = _ref.title,\n      checkedStatus = _ref.checkedStatus;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: checkedStatus ? toggleBtnSelected : toggleBtn,\n    activeOpacity: 0.8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: checkedStatus ? buttonTextSelected : buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, title, checkedStatus ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"\\xA0\\xA0\\xA0\\xA0\", React.createElement(FontAwesome, {\n    name: \"check\",\n    size: 16,\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 43\n    }\n  })) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar toggleBtn = {\n  backgroundColor: 'white',\n  borderRadius: 32,\n  paddingVertical: 8,\n  paddingHorizontal: 28,\n  marginVertical: 14,\n  borderWidth: 1,\n  borderColor: grayMedium\n};\n\nvar toggleBtnSelected = _objectSpread(_objectSpread({}, toggleBtn), {}, {\n  backgroundColor: mint,\n  borderColor: mint\n});\n\nvar buttonText = {\n  fontSize: 16,\n  color: grayMedium,\n  alignSelf: \"center\",\n  letterSpacing: -0.7\n};\n\nvar buttonTextSelected = _objectSpread(_objectSpread({}, buttonText), {}, {\n  color: 'white'\n});\n\nexport { ToggleButton };","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/components/toggleButton.js"],"names":["React","AppLoading","useFonts","FontAwesome","blueDark","mintLight","mint","grayMedium","graySuperLight","greyLight","ToggleButton","onPress","title","checkedStatus","toggleBtnSelected","toggleBtn","buttonTextSelected","buttonText","backgroundColor","borderRadius","paddingVertical","paddingHorizontal","marginVertical","borderWidth","borderColor","fontSize","color","alignSelf","letterSpacing"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAIA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAKA,IAAIC,QAAQ,GAAG,SAAf;AACA,IAAIC,SAAS,GAAG,SAAhB;AACA,IAAIC,IAAI,GAAG,SAAX;AACA,IAAIC,UAAU,GAAG,SAAjB;AACA,IAAIC,cAAc,GAAG,SAArB;AACA,IAAIC,SAAS,GAAG,SAAhB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,KAAZ,QAAYA,KAAZ;AAAA,MAAmBC,aAAnB,QAAmBA,aAAnB;AAAA,SACjB,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEF,OAA3B;AAAoC,IAAA,KAAK,EAAEE,aAAa,GAACC,iBAAD,GAAmBC,SAA3E;AAAsF,IAAA,aAAa,EAAE,GAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,aAAa,GAACG,kBAAD,GAAoBC,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KADL,EAEKC,aAAa,GACd,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA8B,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,CADc,GAGd,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADiB;AAAA,CAArB;;AAYA,IAAME,SAAS,GAAG;AACdG,EAAAA,eAAe,EAAE,OADH;AAEdC,EAAAA,YAAY,EAAE,EAFA;AAGdC,EAAAA,eAAe,EAAE,CAHH;AAIdC,EAAAA,iBAAiB,EAAE,EAJL;AAKdC,EAAAA,cAAc,EAAE,EALF;AAMdC,EAAAA,WAAW,EAAE,CANC;AAOdC,EAAAA,WAAW,EAAEjB;AAPC,CAAlB;;AASA,IAAMO,iBAAiB,mCACjBC,SADiB;AAEpBG,EAAAA,eAAe,EAAEZ,IAFG;AAGpBkB,EAAAA,WAAW,EAAElB;AAHO,EAAvB;;AAKA,IAAMW,UAAU,GAAG;AACfQ,EAAAA,QAAQ,EAAE,EADK;AAEfC,EAAAA,KAAK,EAAEnB,UAFQ;AAGfoB,EAAAA,SAAS,EAAE,QAHI;AAIfC,EAAAA,aAAa,EAAE,CAAC;AAJD,CAAnB;;AAMA,IAAMZ,kBAAkB,mCACjBC,UADiB;AAEpBS,EAAAA,KAAK,EAAE;AAFa,EAAxB;;AAMA,SAAQhB,YAAR","sourcesContent":["import React from 'react';\nimport { StyleSheet, TouchableOpacity, Text, View, TextInput, Dimensions, Keyboard } from \"react-native\";\n\n// custom fonts\nimport { AppLoading } from 'expo';\nimport { useFonts } from '@expo-google-fonts/capriola';\n\nimport { FontAwesome } from '@expo/vector-icons'; \n\n\n\n// colors vars\nvar blueDark = '#033C47'\nvar mintLight = '#D5EFE8'\nvar mint = '#0469c1'\nvar grayMedium = '#879299'\nvar graySuperLight = '#f4f4f4'\nvar greyLight = '#d8d8d8'\n\nconst ToggleButton = ({ onPress, title, checkedStatus }) => (\n    <TouchableOpacity onPress={onPress} style={checkedStatus?toggleBtnSelected:toggleBtn} activeOpacity={0.8} >\n        <Text style={checkedStatus?buttonTextSelected:buttonText}>\n            {title}\n            {checkedStatus?\n            <Text>&nbsp;&nbsp;&nbsp;&nbsp;<FontAwesome name=\"check\" size={16} color=\"white\" /></Text>\n            :\n            <Text></Text>}\n        </Text>\n    </TouchableOpacity>\n  )\n\nconst toggleBtn = {\n    backgroundColor: 'white',\n    borderRadius: 32,\n    paddingVertical: 8,\n    paddingHorizontal: 28,\n    marginVertical: 14,\n    borderWidth: 1,\n    borderColor: grayMedium,\n}\nconst toggleBtnSelected = {\n   ...toggleBtn,\n   backgroundColor: mint,\n   borderColor: mint,\n}\nconst buttonText = {\n    fontSize: 16,\n    color: grayMedium,\n    alignSelf: \"center\",\n    letterSpacing: -0.7\n}\nconst buttonTextSelected = {\n    ...buttonText,\n    color: 'white'\n}\n\n\nexport {ToggleButton};"]},"metadata":{},"sourceType":"module"}