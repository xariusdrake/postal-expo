{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/explore/search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { List, ListItem, Divider, Input, Button, Text, Icon, TopNavigation, TopNavigationAction } from \"@ui-kitten/components\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { QUERY_GET_ALL_POSTAL_PLACE } from \"../../graphql/query\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport axios from \"axios\";\n\nfunction SearchScreen(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loadingPostal = _useState2[0],\n      setLoadingPostal = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allPostalList = _useState4[0],\n      setAllPostalList = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      textSearch = _useState6[0],\n      setTextSearch = _useState6[1];\n\n  var _useState7 = useState(1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      page = _useState8[0],\n      setPage = _useState8[1];\n\n  function findPostal() {\n    var s_name, s_postcode;\n    return _regeneratorRuntime.async(function findPostal$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loadingPostal) {\n              console.log(73, textSearch);\n              s_name = \"\";\n              s_postcode = \"\";\n\n              if (isNaN(textSearch) == true) {\n                s_name = textSearch.toLowerCase().replace(\"xã\", \"x.\").replace(\"phường\", \"p.\");\n              } else {\n                s_postcode = textSearch;\n              }\n\n              setLoadingPostal(true);\n              axios({\n                method: \"get\",\n                url: \"https://api.mabuuchinh.vn/api/v1/MBC/GetPostalPaging?currentPage=1&limit=10&postcode=\" + s_postcode + \"&name=\" + s_name,\n                headers: {\n                  accept: \"text/plain\"\n                }\n              }).then(function (data) {\n                setLoadingPostal(false);\n                console.log(\"data\", data);\n                setAllPostalList(data.data.results);\n              }).catch(function (e) {\n                console.log(\"error\", e);\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderIcon = function renderIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"home-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var name = item.name.replace(\"X. \", \"Xã \").replace(\"P. \", \"Phường \");\n    return React.createElement(ListItem, {\n      key: item.id,\n      title: \"\" + name,\n      description: \"\" + item.postcode,\n      onPress: function onPress() {\n        return navigation.navigate(\"Postal\", {\n          postal: item,\n          is_search: 1\n        });\n      },\n      accessoryLeft: renderIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 4\n      }\n    });\n  };\n\n  var SearchIcon = function SearchIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"search-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  var BackIcon = function BackIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 30\n      }\n    }));\n  };\n\n  var renderBackAction = function renderBackAction() {\n    return React.createElement(TopNavigationAction, {\n      icon: BackIcon,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Explorer\", {\n          textSearch: textSearch\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 3\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: \"#fff\",\n      height: Dimensions.get(\"window\").height,\n      paddingTop: Platform.OS === \"android\" ? 25 : 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }\n  }, React.createElement(TopNavigation, {\n    alignment: \"center\",\n    title: \"T\\xECm ki\\u1EBFm\",\n    accessoryLeft: renderBackAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: styles.messageInputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }\n  }, React.createElement(Input, {\n    style: styles.messageInput,\n    placeholder: \"T\\xEAn \\u0111\\u1ECBa \\u0111i\\u1EC3m, s\\u1ED1 m\\xE3 b\\u01B0u ch\\xEDnh\",\n    value: textSearch,\n    onChangeText: function onChangeText(textSearch) {\n      return setTextSearch(textSearch);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    size: \"small\",\n    style: {\n      height: 40,\n      backgroundColor: \"#0469c1\"\n    },\n    onPress: function onPress() {\n      return findPostal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, \"T\\xECm\")), React.createElement(Spinner, {\n    visible: loadingPostal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 4\n    }\n  }), loadingPostal == true && React.createElement(View, {\n    style: _objectSpread({}, styles.container),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      marginTop: -200\n    }],\n    category: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 6\n    }\n  }, \"\\u0110ang t\\xECm..\")), allPostalList.length > 0 && loadingPostal == false && React.createElement(List, {\n    data: allPostalList,\n    ItemSeparatorComponent: Divider,\n    renderItem: renderItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }), allPostalList.length == 0 && loadingPostal == false && React.createElement(View, {\n    style: _objectSpread({}, styles.container),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      marginTop: -200\n    }],\n    category: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }\n  }, \"Kh\\xF4ng t\\xECm th\\u1EA5y k\\u1EBFt qu\\u1EA3\")));\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    padding: 17,\n    backgroundColor: \"#fff\",\n    textAlign: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FFFFFF\"\n  },\n  loadingView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  current20: {\n    color: \"#033C47\",\n    fontSize: 20\n  },\n  chatContent: {\n    paddingHorizontal: 8,\n    paddingVertical: 12\n  },\n  messageInputContainer: {\n    flexDirection: \"row\",\n    paddingHorizontal: 8,\n    paddingVertical: 16,\n    backgroundColor: \"#fff\"\n  },\n  messageInput: {\n    flex: 1,\n    marginHorizontal: 8\n  },\n  sendButton: {\n    marginRight: 4\n  },\n  iconButton: {\n    width: 24,\n    height: 24\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    favs: state.favs\n  };\n}\n\nexport default connect(mapStateToProps, null)(SearchScreen);","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/explore/search.js"],"names":["React","useState","useEffect","connect","useNavigation","List","ListItem","Divider","Input","Button","Text","Icon","TopNavigation","TopNavigationAction","useLazyQuery","QUERY_GET_ALL_POSTAL_PLACE","Spinner","axios","SearchScreen","props","navigation","loadingPostal","setLoadingPostal","allPostalList","setAllPostalList","textSearch","setTextSearch","page","setPage","findPostal","console","log","s_name","s_postcode","isNaN","toLowerCase","replace","method","url","headers","accept","then","data","results","catch","e","renderIcon","renderItem","item","index","name","id","postcode","navigate","postal","is_search","SearchIcon","BackIcon","renderBackAction","backgroundColor","height","Dimensions","get","paddingTop","Platform","OS","styles","messageInputContainer","messageInput","container","title","marginTop","length","StyleSheet","create","padding","textAlign","flex","justifyContent","alignItems","loadingView","current20","color","fontSize","chatContent","paddingHorizontal","paddingVertical","flexDirection","marginHorizontal","sendButton","marginRight","iconButton","width","mapStateToProps","state","favs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tStyleSheet,\n\tScrollView,\n\tTouchableOpacity,\n\tDimensions,\n\tSafeAreaView,\n\tView,\n\tPlatform,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n\tList,\n\tListItem,\n\tDivider,\n\tInput,\n\tButton,\n\tText,\n\tIcon,\n\tTopNavigation,\n\tTopNavigationAction,\n} from \"@ui-kitten/components\";\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { QUERY_GET_ALL_POSTAL_PLACE } from \"../../graphql/query\";\n\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport axios from \"axios\";\n\nfunction SearchScreen(props) {\n\tconst navigation = useNavigation();\n\n\t// const [\n\t// \tgetListPostal,\n\t// \t{\n\t// \t\tonCompleted,\n\t// \t\tnetworkStatus,\n\t// \t\terror: errorPostal,\n\t// \t\tcalled: calledPostal,\n\t// \t\tloading: loadingPostal,\n\t// \t\tdata: dataPostal,\n\t// \t},\n\t// ] = useLazyQuery(QUERY_GET_ALL_POSTAL_PLACE, {\n\t// \tonCompleted: () => {\n\t// \t\t// setLoading(false);\n\t// \t\tconsole.log(44, dataPostal.postals);\n\n\t// \t\tsetAllPostalList(dataPostal.postals);\n\t// \t\tconsole.log(\"onCompleted \", dataPostal.postals.length);\n\t// \t},\n\t// \tonError: () => {\n\t// \t\tconsole.log(\"onError\");\n\t// \t\tconsole.log(errorPostal);\n\t// \t},\n\t// });\n\n\tconst [loadingPostal, setLoadingPostal] = useState(false);\n\tconst [allPostalList, setAllPostalList] = useState({});\n\tconst [textSearch, setTextSearch] = useState(\"\");\n\tconst [page, setPage] = useState(1);\n\t// const [loading, setLoading] = useState(false);\n\n\tasync function findPostal() {\n\t\tif (!loadingPostal) {\n\t\t\t// setLoading(true);\n\n\t\t\tconsole.log(73, textSearch);\n\n\t\t\tlet s_name = \"\"\n\t\t\tlet s_postcode = \"\"\n\n\t\t\tif (isNaN(textSearch) == true) {\n\t\t\t\ts_name = textSearch\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.replace(\"xã\", \"x.\")\n\t\t\t\t\t.replace(\"phường\", \"p.\");\n\t\t\t} else {\n\t\t\t\ts_postcode = textSearch;\n\t\t\t}\n\n\t\t\tsetLoadingPostal(true)\n\n\t\t\taxios({\n\t\t\t\tmethod: \"get\",\n\t\t\t\turl:\n\t\t\t\t\t\"https://api.mabuuchinh.vn/api/v1/MBC/GetPostalPaging?currentPage=1&limit=10&postcode=\" +\n\t\t\t\t\ts_postcode +\n\t\t\t\t\t\"&name=\" +\n\t\t\t\t\ts_name,\n\t\t\t\theaders: {\n\t\t\t\t\taccept: \"text/plain\",\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetLoadingPostal(false)\n\t\t\t\t\tconsole.log(\"data\", data);\n\t\t\t\t\tsetAllPostalList(data.data.results);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(\"error\", e);\n\t\t\t\t});\n\n\t\t\t// getListPostal({\n\t\t\t// \tvariables: {\n\t\t\t// \t\ttext:\n\t\t\t// \t\t\t\"%\" +\n\t\t\t// \t\t\ttextSearch\n\t\t\t// \t\t\t\t.toLowerCase()\n\t\t\t// \t\t\t\t.replace(\"xã\", \"x.\")\n\t\t\t// \t\t\t\t.replace(\"phường\", \"p.\") +\n\t\t\t// \t\t\t\"%\",\n\t\t\t// \t\t// litmit: 10,\n\t\t\t// \t\t// offset: 0,\n\t\t\t// \t},\n\t\t\t// });\n\t\t}\n\t}\n\n\t// async function scrollPage() {\n\t// \tsetPage(page + 1)\n\t// \tconsole.log('scrollPage', (page * 10))\n\t// \t// getListPostal({ variables: { text: \"%\" + textSearch + \"%\", litmit: 10, offset: ((page - 1) * 10) } });\n\n\t// }\n\n\t// let renderIcon = (type) => {\n\t// \t// if (type == 1) {\n\t// \treturn <Icon name=\"home-outline\" />;\n\t// \t// } else {\n\t// \t// return (<Icon {...props} name=\"person-outline\" />)\n\t// \t// }\n\t// };\n\n\tconst renderIcon = (props) => <Icon {...props} name=\"home-outline\" />;\n\n\tlet renderItem = ({ item, index }) => {\n\t\tlet name = item.name.replace(\"X. \", \"Xã \").replace(\"P. \", \"Phường \");\n\n\t\treturn (\n\t\t\t<ListItem\n\t\t\t\tkey={item.id}\n\t\t\t\ttitle={`${name}`}\n\t\t\t\tdescription={`${item.postcode}`}\n\t\t\t\tonPress={() => navigation.navigate(\"Postal\", { postal: item, is_search: 1 })}\n\t\t\t\taccessoryLeft={renderIcon}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst SearchIcon = (props) => <Icon {...props} name=\"search-outline\" />;\n\tconst BackIcon = (props) => <Icon {...props} name=\"arrow-back\" />;\n\n\tconst renderBackAction = () => (\n\t\t<TopNavigationAction\n\t\t\ticon={BackIcon}\n\t\t\tonPress={() =>\n\t\t\t\tprops.navigation.navigate(\"Explorer\", {\n\t\t\t\t\ttextSearch: textSearch,\n\t\t\t\t})\n\t\t\t}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<SafeAreaView\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: \"#fff\",\n\t\t\t\theight: Dimensions.get(\"window\").height,\n\t\t\t\tpaddingTop: Platform.OS === \"android\" ? 25 : 0,\n\t\t\t}}\n\t\t>\n\t\t\t<TopNavigation\n\t\t\t\talignment=\"center\"\n\t\t\t\ttitle=\"Tìm kiếm\"\n\t\t\t\taccessoryLeft={renderBackAction}\n\t\t\t\t// accessoryRight={renderRightActions}\n\t\t\t/>\n\t\t\t<Divider />\n\n\t\t\t<View\n\t\t\t\tstyle={styles.messageInputContainer}\n\t\t\t\t// offset={keyboardOffset}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tstyle={styles.messageInput}\n\t\t\t\t\tplaceholder=\"Tên địa điểm, số mã bưu chính\"\n\t\t\t\t\tvalue={textSearch}\n\t\t\t\t\tonChangeText={(textSearch) => setTextSearch(textSearch)}\n\t\t\t\t\t// icon={MicIcon}\n\t\t\t\t\t// accessoryLeft={SearchIcon}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstyle={{ height: 40, backgroundColor: \"#0469c1\" }}\n\t\t\t\t\t// appearance=\"ghost\"\n\t\t\t\t\t// style={[styles.iconButton, styles.sendButton]}\n\t\t\t\t\t// accessoryRight={SearchIcon}\n\t\t\t\t\tonPress={() => findPostal()}\n\t\t\t\t>\n\t\t\t\t\tTìm\n\t\t\t\t</Button>\n\t\t\t</View>\n\n\t\t\t<Spinner visible={loadingPostal} />\n\n\t\t\t{loadingPostal == true && (\n\t\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={[styles.title, { marginTop: -200 }]}\n\t\t\t\t\t\tcategory=\"h6\"\n\t\t\t\t\t>\n\t\t\t\t\t\tĐang tìm..\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t)}\n\n\t\t\t{allPostalList.length > 0 && loadingPostal == false && (\n\t\t\t\t<List\n\t\t\t\t\tdata={allPostalList}\n\t\t\t\t\tItemSeparatorComponent={Divider}\n\t\t\t\t\trenderItem={renderItem}\n\t\t\t\t\t// onScrollEndDrag={() => console.log(\"end\")}\n\t\t\t\t\t// onScrollBeginDrag={() => scrollPage()}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{allPostalList.length == 0 && loadingPostal == false && (\n\t\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={[styles.title, { marginTop: -200 }]}\n\t\t\t\t\t\tcategory=\"h6\"\n\t\t\t\t\t>\n\t\t\t\t\t\tKhông tìm thấy kết quả\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t)}\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\ttitle: {\n\t\tpadding: 17,\n\t\tbackgroundColor: \"#fff\",\n\t\ttextAlign: \"center\",\n\t},\n\n\tcontainer: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\t// paddingTop: 200,\n\t\t// paddingHorizontal: 25,\n\t\tbackgroundColor: \"#FFFFFF\",\n\t},\n\tloadingView: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"transparent\",\n\t},\n\tcurrent20: {\n\t\tcolor: \"#033C47\",\n\t\tfontSize: 20,\n\t},\n\n\tchatContent: {\n\t\tpaddingHorizontal: 8,\n\t\tpaddingVertical: 12,\n\t},\n\tmessageInputContainer: {\n\t\tflexDirection: \"row\",\n\t\tpaddingHorizontal: 8,\n\t\tpaddingVertical: 16,\n\t\tbackgroundColor: \"#fff\",\n\t\t// backgroundColor: \"background-basic-color-1\",\n\t},\n\t// attachButton: {\n\t// \tborderRadius: 24,\n\t// \tmarginHorizontal: 8,\n\t// },\n\tmessageInput: {\n\t\tflex: 1,\n\t\tmarginHorizontal: 8,\n\t},\n\tsendButton: {\n\t\tmarginRight: 4,\n\t},\n\ticonButton: {\n\t\twidth: 24,\n\t\theight: 24,\n\t},\n});\n\nfunction mapStateToProps(state) {\n\treturn { favs: state.favs };\n}\n\nexport default connect(mapStateToProps, null)(SearchScreen);\n"]},"metadata":{},"sourceType":"module"}