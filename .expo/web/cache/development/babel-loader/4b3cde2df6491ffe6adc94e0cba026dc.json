{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/auth/forgetPassword/stepEnterCode.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text } from \"@ui-kitten/components\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { connect } from \"react-redux\";\nimport { AppLoading } from \"expo\";\nimport SMS from \"../../../functions/sms\";\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { MUTATION_CREATE_CODE_CONFIRM, QUERY_FORGET_PASSWORD_CHECK_PHONE } from \"../../../graphql/query\";\nimport { isEmpty, isMin } from \"../../../functions/strings\";\nimport appConfigs from \"../../../config\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nfunction ForgetPasswordStepEnterCodeScreen(props) {\n  var _useLazyQuery = useLazyQuery(QUERY_FORGET_PASSWORD_CHECK_PHONE, {\n    onCompleted: function onCompleted(dataCheckPhone) {\n      console.log(\"dataCheckPhone onCompleted\");\n      console.log(dataCheckPhone);\n\n      if (isEmpty(dataCheckPhone.users[0]) == true) {\n        Alert.alert(\"Không tìm thấy tài khoản\");\n      } else {\n        var randomCode = Math.floor(1000 + Math.random() * 9000);\n        console.log(\"randomCode: \" + randomCode);\n        createCodeConfirm({\n          variables: {\n            code: randomCode,\n            phone: parseInt(phoneInput)\n          }\n        });\n      }\n    },\n    onError: function onError(errorCheckPhone) {\n      console.log(\"onError errorCheckPhone\");\n      console.log(errorCheckPhone);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      checkPhone = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      errorCheckPhone = _useLazyQuery2$.error,\n      calledCheckPhone = _useLazyQuery2$.called,\n      loadingCheckPhone = _useLazyQuery2$.loading,\n      dataCheckPhone = _useLazyQuery2$.data;\n\n  var _useMutation = useMutation(MUTATION_CREATE_CODE_CONFIRM, {\n    onCompleted: function onCompleted(dataCode) {\n      console.log(dataCode);\n      console.log(44, dataCode.insert_user_confirm_code.returning[0].id);\n\n      if (dataCode.insert_user_confirm_code.returning[0].id != null) {\n        console.log(\"just call\");\n        var phone = \"84\" + phoneInput.substring(1);\n        console.log(\"phone: \" + phone);\n        SMS.send({\n          message: dataCode.insert_user_confirm_code.returning[0].code + ' la ma xac minh dang ky Baotrixemay cua ban',\n          phone: phone\n        }).then(function (response) {\n          console.log(\"response SMS\");\n          console.log(response);\n        }).catch(function (error) {\n          console.log(\"error\");\n          console.log(error);\n        }).finally(function () {\n          console.log(\"finally\");\n        });\n      } else {\n        console.log(\"false id\");\n      }\n    },\n    onError: function onError(errorCode) {\n      console.log(\"onError\");\n      console.log(errorCode);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createCodeConfirm = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      errorCode = _useMutation2$.error,\n      calledCode = _useMutation2$.called,\n      loadingCode = _useMutation2$.loading,\n      dataCode = _useMutation2$.data;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneInput = _useState2[0],\n      setPhoneInput = _useState2[1];\n\n  var onSubmit = function onSubmit() {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Keyboard.dismiss();\n            console.log(126, phoneInput);\n            checkPhone({\n              variables: {\n                phone: phoneInput.toString()\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (props.token) {\n    props.navigation.navigate(\"Explore\");\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      style: styles.scrollview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 4\n      }\n    }, React.createElement(Spinner, {\n      visible: loadingCheckPhone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }), React.createElement(View, {\n      style: _objectSpread({}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        margin: 50,\n        marginTop: -120,\n        paddingTop: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 22,\n        color: \"#000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 8\n      }\n    }, \"Nh\\u1EADp m\\xE3 x\\xE1c nh\\u1EADn\"), React.createElement(Text, {\n      style: [styles.textBlackSize14],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 8\n      }\n    }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\"), React.createElement(TextInput, {\n      value: phoneInput,\n      autoCapitalize: \"none\",\n      underlineColorAndroid: \"#00000000\",\n      returnKeyType: \"next\",\n      onSubmitEditing: function onSubmitEditing() {},\n      style: styles.customEditText,\n      clearButtonMode: \"while-editing\",\n      enablesReturnKeyAutomatically: true,\n      blurOnSubmit: false,\n      placeholder: \"Nhập số điện thoại\",\n      onChangeText: function onChangeText(text) {\n        return setPhoneInput(text);\n      },\n      keyboardType: \"numeric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 8\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 8\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.buttonBackgroundBlue,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return onSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: [styles.textWhite, {\n        fontSize: 16\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, \"G\\u1EEDi m\\xE3 x\\xE1c nh\\u1EADn\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 20,\n        height: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 8\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.buttonBorderBlue,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"SignIn\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.textSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 10\n      }\n    }, \"Quay v\\u1EC1 \\u0111\\u0103ng nh\\u1EADp\")))))));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  forgotContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  forgotPass: {\n    color: \"#0469c1\",\n    fontSize: 12\n  },\n  textBlackSize14: {\n    color: \"#202020\",\n    fontSize: 15,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  buttonBackgroundBlue: {\n    flex: 1,\n    backgroundColor: \"#0469c1\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonBorderBlue: {\n    flex: 1,\n    borderColor: \"#0469c1\",\n    borderRadius: 20,\n    borderWidth: 1.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textSignUp: {\n    fontSize: 16,\n    color: \"#0469c1\"\n  },\n  customEditText: {\n    backgroundColor: \"#F4F5F6\",\n    borderRadius: 10,\n    padding: 8,\n    paddingStart: 15,\n    color: \"#9597A1\"\n  },\n  textWhite: {\n    fontSize: 18,\n    color: \"#fff\"\n  },\n  scrollview: {\n    backgroundColor: \"#fff\"\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token\n  };\n}\n\nexport default connect(mapStateToProps, null)(ForgetPasswordStepEnterCodeScreen);","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/auth/forgetPassword/stepEnterCode.js"],"names":["React","useState","useEffect","Text","StatusBar","connect","AppLoading","SMS","useQuery","useLazyQuery","useMutation","MUTATION_CREATE_CODE_CONFIRM","QUERY_FORGET_PASSWORD_CHECK_PHONE","isEmpty","isMin","appConfigs","Spinner","ForgetPasswordStepEnterCodeScreen","props","onCompleted","dataCheckPhone","console","log","users","Alert","alert","randomCode","Math","floor","random","createCodeConfirm","variables","code","phone","parseInt","phoneInput","onError","errorCheckPhone","checkPhone","error","calledCheckPhone","called","loadingCheckPhone","loading","data","dataCode","insert_user_confirm_code","returning","id","substring","send","message","then","response","catch","finally","errorCode","calledCode","loadingCode","setPhoneInput","onSubmit","Keyboard","dismiss","toString","token","navigation","navigate","styles","scrollview","container","width","flexDirection","margin","marginTop","paddingTop","fontSize","color","textBlackSize14","customEditText","text","buttonBackgroundBlue","padding","textWhite","height","buttonBorderBlue","textSignUp","StyleSheet","create","flex","forgotContainer","alignItems","forgotPass","marginBottom","backgroundColor","borderRadius","justifyContent","borderColor","borderWidth","paddingStart","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tStyleSheet,\n\tScrollView,\n\tView,\n\tTouchableWithoutFeedback,\n\tKeyboard,\n\tPlatform,\n\tAsyncStorage,\n\tTouchableOpacity,\n\tTextInput,\n\tAlert,\n} from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport { connect } from \"react-redux\";\n\n// custom fonts\nimport { AppLoading } from \"expo\";\nimport SMS from \"../../../functions/sms\";\n\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport {\n\tMUTATION_CREATE_CODE_CONFIRM,\n\tQUERY_FORGET_PASSWORD_CHECK_PHONE,\n} from \"../../../graphql/query\";\n\nimport { isEmpty, isMin } from \"../../../functions/strings\";\n\nimport appConfigs from \"../../../config\";\n\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nfunction ForgetPasswordStepEnterCodeScreen(props) {\n\tconst [\n\t\tcheckPhone,\n\t\t{\n\t\t\terror: errorCheckPhone,\n\t\t\tcalled: calledCheckPhone,\n\t\t\tloading: loadingCheckPhone,\n\t\t\tdata: dataCheckPhone,\n\t\t},\n\t] = useLazyQuery(QUERY_FORGET_PASSWORD_CHECK_PHONE, {\n\t\t// fetchPolicy: \"no-cache\",\n\t\tonCompleted: (dataCheckPhone) => {\n\t\t\tconsole.log(\"dataCheckPhone onCompleted\");\n\t\t\tconsole.log(dataCheckPhone);\n\n\t\t\tif (isEmpty(dataCheckPhone.users[0]) == true) {\n\t\t\t\tAlert.alert(\"Không tìm thấy tài khoản\");\n\t\t\t} else {\n\t\t\t\tlet randomCode = Math.floor(1000 + Math.random() * 9000);\n\t\t\t\tconsole.log(\"randomCode: \" + randomCode);\n\n\t\t\t\tcreateCodeConfirm({\n\t\t\t\t\tvariables: { code: randomCode, phone: parseInt(phoneInput) },\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonError: (errorCheckPhone) => {\n\t\t\tconsole.log(\"onError errorCheckPhone\");\n\t\t\tconsole.log(errorCheckPhone);\n\t\t},\n\t});\n\n\tconst [\n\t\tcreateCodeConfirm,\n\t\t{\n\t\t\terror: errorCode,\n\t\t\tcalled: calledCode,\n\t\t\tloading: loadingCode,\n\t\t\tdata: dataCode,\n\t\t},\n\t] = useMutation(MUTATION_CREATE_CODE_CONFIRM, {\n\t\t// fetchPolicy: \"no-cache\",\n\t\tonCompleted: (dataCode) => {\n\t\t\tconsole.log(dataCode);\n\t\t\tconsole.log(44, dataCode.insert_user_confirm_code.returning[0].id);\n\n\t\t\tif (dataCode.insert_user_confirm_code.returning[0].id != null) {\n\t\t\t\tconsole.log(\"just call\");\n\n\t\t\t\tlet phone = \"84\" + phoneInput.substring(1);\n\n\t\t\t\tconsole.log(\"phone: \" + phone);\n\n\t\t\t\tSMS.send({\n\t\t\t\t\tmessage: dataCode.insert_user_confirm_code.returning[0].code + ' la ma xac minh dang ky Baotrixemay cua ban',\n\t\t\t\t\tphone: phone,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response SMS\");\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.log(\"error\");\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tconsole.log(\"finally\");\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"false id\");\n\t\t\t}\n\t\t},\n\t\tonError: (errorCode) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorCode);\n\t\t},\n\t});\n\n\tconst [phoneInput, setPhoneInput] = useState(\"\");\n\n\tconst onSubmit = async () => {\n\t\tKeyboard.dismiss();\n\n\t\tconsole.log(126, phoneInput);\n\n\t\tcheckPhone({\n\t\t\tvariables: {\n\t\t\t\tphone: phoneInput.toString(),\n\t\t\t},\n\t\t});\n\t};\n\n\tif (props.token) {\n\t\tprops.navigation.navigate(\"Explore\");\n\t\treturn <AppLoading />;\n\t} else {\n\t\treturn (\n\t\t\t<ScrollView\n\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\tstyle={styles.scrollview}\n\t\t\t>\n\t\t\t\t<Spinner visible={loadingCheckPhone} />\n\t\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\t\tonPress={Keyboard.dismiss}\n\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\tmargin: 50,\n\t\t\t\t\t\t\t\tmarginTop: -120,\n\t\t\t\t\t\t\t\tpaddingTop: 300,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: 22,\n\t\t\t\t\t\t\t\t\tcolor: \"#000\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNhập mã xác nhận\n\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t<Text style={[styles.textBlackSize14]}>\n\t\t\t\t\t\t\t\tSố điện thoại\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tvalue={phoneInput}\n\t\t\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\t\t\tunderlineColorAndroid=\"#00000000\"\n\t\t\t\t\t\t\t\treturnKeyType={\"next\"}\n\t\t\t\t\t\t\t\tonSubmitEditing={() => {}}\n\t\t\t\t\t\t\t\tstyle={styles.customEditText}\n\t\t\t\t\t\t\t\tclearButtonMode=\"while-editing\"\n\t\t\t\t\t\t\t\tenablesReturnKeyAutomatically={true}\n\t\t\t\t\t\t\t\tblurOnSubmit={false}\n\t\t\t\t\t\t\t\tplaceholder={\"Nhập số điện thoại\"}\n\t\t\t\t\t\t\t\tonChangeText={(text) => setPhoneInput(text)}\n\t\t\t\t\t\t\t\tkeyboardType=\"numeric\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{ flexDirection: \"row\", marginTop: 24 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tstyle={styles.buttonBackgroundBlue}\n\t\t\t\t\t\t\t\t\tactiveOpacity={0.5}\n\t\t\t\t\t\t\t\t\tonPress={() => onSubmit()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<View style={{ padding: 10 }}>\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\t\t\t\t\tstyles.textWhite,\n\t\t\t\t\t\t\t\t\t\t\t\t{ fontSize: 16 },\n\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tGửi mã xác nhận\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\tmarginTop: 20,\n\t\t\t\t\t\t\t\t\theight: 40,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tstyle={styles.buttonBorderBlue}\n\t\t\t\t\t\t\t\t\tactiveOpacity={0.5}\n\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\tprops.navigation.navigate(\"SignIn\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={styles.textSignUp}>\n\t\t\t\t\t\t\t\t\t\tQuay về đăng nhập\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tflexDirection: \"column\",\n\t},\n\tforgotContainer: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t},\n\tforgotPass: {\n\t\tcolor: \"#0469c1\",\n\t\tfontSize: 12,\n\t},\n\n\ttextBlackSize14: {\n\t\tcolor: \"#202020\",\n\t\tfontSize: 15,\n\t\tmarginTop: 20,\n\t\tmarginBottom: 10,\n\t},\n\tbuttonBackgroundBlue: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#0469c1\",\n\t\tborderRadius: 20,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tbuttonBorderBlue: {\n\t\tflex: 1,\n\t\tborderColor: \"#0469c1\",\n\t\tborderRadius: 20,\n\t\tborderWidth: 1.5,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\ttextSignUp: {\n\t\tfontSize: 16,\n\t\tcolor: \"#0469c1\",\n\t},\n\tcustomEditText: {\n\t\tbackgroundColor: \"#F4F5F6\",\n\t\tborderRadius: 10,\n\t\tpadding: 8,\n\t\tpaddingStart: 15,\n\t\tcolor: \"#9597A1\",\n\t},\n\ttextWhite: {\n\t\tfontSize: 18,\n\t\tcolor: \"#fff\",\n\t},\n\n\tscrollview: {\n\t\tbackgroundColor: \"#fff\",\n\t},\n});\n\nfunction mapStateToProps(state) {\n\treturn { token: state.token };\n}\n\nexport default connect(mapStateToProps, null)(ForgetPasswordStepEnterCodeScreen);\n"]},"metadata":{},"sourceType":"module"}