{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/explore/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { StatusBar } from \"expo-status-bar\";\nimport SegmentedControl from \"@react-native-community/segmented-control\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Location from \"expo-location\";\nimport * as Permissions from \"expo-permissions\";\nimport * as geolib from \"geolib\";\nimport { connect } from \"react-redux\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { Input } from \"@ui-kitten/components\";\nimport Map from \"../../components/map\";\nimport List from \"../../components/listExplore\";\nimport { BASE_URL } from \"../../components/environment\";\nimport { QUERY_GET_ALL_POSTAL_PLACE, QUERY_SEARCH_ALL_POSTAL_PLACE } from \"../../graphql/query\";\n\nfunction ExploreScreen(props) {\n  var navigation = useNavigation();\n\n  var _useLazyQuery = useLazyQuery(QUERY_GET_ALL_POSTAL_PLACE, {\n    onCompleted: function onCompleted() {\n      console.log(\"onCompleted\");\n      setAllPostalList(dataPostal.postals);\n    },\n    onError: function onError() {\n      console.log(\"onError\");\n      console.log(errorPostal);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getListPostal = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      onCompleted = _useLazyQuery2$.onCompleted,\n      networkStatus = _useLazyQuery2$.networkStatus,\n      errorPostal = _useLazyQuery2$.error,\n      calledPostal = _useLazyQuery2$.called,\n      loadingPostal = _useLazyQuery2$.loading,\n      dataPostal = _useLazyQuery2$.data;\n\n  var _useLazyQuery3 = useLazyQuery(QUERY_SEARCH_ALL_POSTAL_PLACE, {\n    onCompleted: function onCompleted(dataSearch) {\n      console.log(\"onCompleted\");\n      console.log(dataSearch);\n\n      if (dataSearch.postals.length === 0) {\n        setNoResultFound(true);\n      } else {\n        setNoResultFound(false);\n        navigation.navigate(\"SearchedResults\", {\n          placesArray: dataSearch.postals\n        });\n      }\n    },\n    onError: function onError(errorSearch) {\n      console.log(\"onError\");\n      console.log(errorSearch);\n    }\n  }),\n      _useLazyQuery4 = _slicedToArray(_useLazyQuery3, 2),\n      searchPostal = _useLazyQuery4[0],\n      _useLazyQuery4$ = _useLazyQuery4[1],\n      errorSearch = _useLazyQuery4$.error,\n      calledSearch = _useLazyQuery4$.called,\n      loadingSearch = _useLazyQuery4$.loading,\n      dataSearch = _useLazyQuery4$.data;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      mapListIndex = _useState2[0],\n      setMapListIndex = _useState2[1];\n\n  var _useState3 = useState(48.8648758),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentLat = _useState4[0],\n      setCurrentLat = _useState4[1];\n\n  var _useState5 = useState(2.3501831),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentLong = _useState6[0],\n      setCurrentLong = _useState6[1];\n\n  var _useState7 = useState({\n    latitude: 21.02828,\n    longitude: 105.85388,\n    latitudeDelta: 0.1,\n    longitudeDelta: 0.1\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      region = _useState8[0],\n      setRegion = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      allPostalList = _useState10[0],\n      setAllPostalList = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      allPlacesList = _useState12[0],\n      setAllPlacesList = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      filteredPlaces = _useState14[0],\n      setFilteredPlaces = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      mapReady = _useState16[0],\n      setMapReady = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      valueSearch = _useState18[0],\n      setValueSearch = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      hasPermissionLocation = _useState20[0],\n      setHasPermissionLocation = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      hasPermissionCamera = _useState22[0],\n      setHasPermissionCamera = _useState22[1];\n\n  function handleKeyPress(e) {\n    return _regeneratorRuntime.async(function handleKeyPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (e.key === \"Enter\") {\n              console.log(\"enter\");\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function _askPermissions() {\n    var response, location;\n    return _regeneratorRuntime.async(function askPermissions$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n          case 2:\n            response = _context2.sent;\n            console.log(\"askPermissions response\");\n            console.log(response);\n\n            if (!(response.status == \"granted\")) {\n              _context2.next = 14;\n              break;\n            }\n\n            setHasPermissionLocation(true);\n            console.log(\"askPermissions granted\");\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 10:\n            location = _context2.sent;\n\n            if (location.coords.latitude != null && location.coords.longitude != null) {\n              console.log(\"askPermissions here location: \", location.coords.latitude, location.coords.longitude);\n              setCurrentLat(location.coords.latitude);\n              setCurrentLong(location.coords.longitude);\n              setRegion({\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n                latitudeDelta: 0.0922,\n                longitudeDelta: 0.0421\n              });\n            }\n\n            _context2.next = 16;\n            break;\n\n          case 14:\n            setHasPermissionLocation(false);\n            Alert.alert(\"Quyền vị trị không được cấp. Vào cài đặt để đặt lại.\");\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function findPostal() {\n    return _regeneratorRuntime.async(function findPostal$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(73, valueSearch);\n\n            if (valueSearch != \"\") {\n              searchPostal({\n                variables: {\n                  name: \"%\" + valueSearch + \"%\"\n                }\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    props.storeFilterDatas({\n      placeDistance: 30000,\n      placeName: \"\",\n      networkName: \"\",\n      restaurant: true,\n      shop: true,\n      organize: true,\n      personal: true\n    });\n\n    var getPostals = function getPostals() {\n      var allPostals;\n      return _regeneratorRuntime.async(function getPostals$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(getListPostal());\n\n            case 2:\n              allPostals = _context4.sent;\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    setMapReady(true);\n    getPostals();\n\n    _askPermissions();\n  }, []);\n  useEffect(function () {\n    var filterPlaces = function filterPlaces(places, filter) {\n      console.log(\"reload filter\");\n      var tempPlaces = [];\n      var tempArray = Object.values(places);\n      tempArray.forEach(function (place) {\n        if (filter.personal == true && place.type == 2) {\n          tempPlaces.push(place);\n        }\n\n        if (filter.organize == true && place.type == 1) {\n          tempPlaces.push(place);\n        }\n\n        if (filter.personal == false && filter.organize == false) {\n          tempPlaces.push(place);\n        }\n      });\n      var shuffled = tempPlaces.map(function (a) {\n        return {\n          sort: Math.random(),\n          value: a\n        };\n      }).sort(function (a, b) {\n        return a.sort - b.sort;\n      }).map(function (a) {\n        return a.value;\n      });\n      console.log(\"list after filtered: \", shuffled);\n      setFilteredPlaces(shuffled);\n    };\n\n    console.log(224, props.filter);\n    filterPlaces(allPostalList, props.filter);\n  }, [allPostalList, props.filter]);\n\n  if (mapReady == false) {\n    return React.createElement(View, {\n      style: _objectSpread({}, styles.loadingContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({}, styles.current),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }\n    }, \"\\u0110ang t\\u1EA3i b\\u1EA3n \\u0111\\u1ED3\"));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 4\n    }\n  }, mapListIndex === 0 ? React.createElement(Map, {\n    filteredPlaces: filteredPlaces,\n    userPosition: {\n      currentLat: currentLat,\n      currentLong: currentLong\n    },\n    region: region,\n    askPermissions: function askPermissions() {\n      return _askPermissions();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 6\n    }\n  }) : React.createElement(List, {\n    filteredPlaces: filteredPlaces,\n    loading: loadingPostal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 6\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignSelf: \"center\",\n      marginTop: \"2%\",\n      position: \"absolute\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 250\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 6\n    }\n  }, React.createElement(SegmentedControl, {\n    appearance: \"light\",\n    backgroundColor: \"white\",\n    values: [\"Bản đồ\", \"Danh sách\"],\n    selectedIndex: mapListIndex,\n    onChange: function onChange(event) {\n      setMapListIndex(event.nativeEvent.selectedSegmentIndex);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }\n  })))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar blueDark = \"#033C47\";\nvar mintLight = \"#D5EFE8\";\nvar mint = \"#2DB08C\";\nvar grayMedium = \"#879299\";\nvar graySuperLight = \"#f4f4f4\";\nvar greyLight = \"#d8d8d8\";\nvar gold = \"#E8BA00\";\nvar goldLight = \"#faf1cb\";\nvar tomato = \"#ec333b\";\nvar peach = \"#ef7e67\";\nvar peachLight = \"#FED4CB\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#fff\"\n  },\n  modalContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#fff\"\n  },\n  current: {\n    fontSize: 16,\n    color: blueDark,\n    textAlign: \"left\",\n    lineHeight: 26\n  },\n  currentBold: {\n    fontSize: 16,\n    color: blueDark,\n    textAlign: \"left\",\n    lineHeight: 26,\n    fontWeight: \"bold\"\n  },\n  mapStyle: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height\n  },\n  inputBadge: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    height: 32,\n    width: \"50%\",\n    paddingHorizontal: 15,\n    paddingVertical: 0,\n    margin: 10,\n    borderRadius: 10,\n    borderColor: \"#f6f6f6\"\n  },\n  textBadge: {\n    color: grayMedium\n  }\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    storeFilterDatas: function storeFilterDatas(filterDatas) {\n      dispatch({\n        type: \"saveFilterData\",\n        filterDatas: filterDatas\n      });\n    },\n    storeFav: function storeFav(favs) {\n      dispatch({\n        type: \"saveFavs\",\n        favs: favs\n      });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    filter: state.filter\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreScreen);","map":{"version":3,"sources":["/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/explore/index.js"],"names":["React","useState","useEffect","StatusBar","SegmentedControl","useNavigation","Location","Permissions","geolib","connect","useQuery","useLazyQuery","Input","Map","List","BASE_URL","QUERY_GET_ALL_POSTAL_PLACE","QUERY_SEARCH_ALL_POSTAL_PLACE","ExploreScreen","props","navigation","onCompleted","console","log","setAllPostalList","dataPostal","postals","onError","errorPostal","getListPostal","networkStatus","error","calledPostal","called","loadingPostal","loading","data","dataSearch","length","setNoResultFound","navigate","placesArray","errorSearch","searchPostal","calledSearch","loadingSearch","mapListIndex","setMapListIndex","currentLat","setCurrentLat","currentLong","setCurrentLong","latitude","longitude","latitudeDelta","longitudeDelta","region","setRegion","allPostalList","allPlacesList","setAllPlacesList","filteredPlaces","setFilteredPlaces","mapReady","setMapReady","valueSearch","setValueSearch","hasPermissionLocation","setHasPermissionLocation","hasPermissionCamera","setHasPermissionCamera","handleKeyPress","e","key","askPermissions","askAsync","LOCATION","response","status","getCurrentPositionAsync","location","coords","Alert","alert","findPostal","variables","name","storeFilterDatas","placeDistance","placeName","networkName","restaurant","shop","organize","personal","getPostals","allPostals","filterPlaces","places","filter","tempPlaces","tempArray","Object","values","forEach","place","type","push","shuffled","map","a","sort","Math","random","value","b","styles","loadingContainer","current","container","flex","alignSelf","marginTop","position","width","event","nativeEvent","selectedSegmentIndex","blueDark","mintLight","mint","grayMedium","graySuperLight","greyLight","gold","goldLight","tomato","peach","peachLight","StyleSheet","create","backgroundColor","alignItems","justifyContent","modalContainer","fontSize","color","textAlign","lineHeight","currentBold","fontWeight","mapStyle","Dimensions","get","height","inputBadge","flexDirection","paddingHorizontal","paddingVertical","margin","borderRadius","borderColor","textBadge","mapDispatchToProps","dispatch","filterDatas","storeFav","favs","mapStateToProps","state","token"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {\n\tStyleSheet,\n\tView,\n\tDimensions,\n\tSafeAreaView,\n\tTouchableOpacity,\n\tText,\n\tTextInput,\n\tImage,\n\tPermissionsAndroid,\n\tPlatform,\n\tAlert,\n} from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport SegmentedControl from \"@react-native-community/segmented-control\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Location from \"expo-location\";\nimport * as Permissions from \"expo-permissions\";\nimport * as geolib from \"geolib\";\nimport { connect } from \"react-redux\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { Input } from \"@ui-kitten/components\";\n\n// my components\nimport Map from \"../../components/map\";\nimport List from \"../../components/listExplore\";\n\n// import BASE URL\nimport { BASE_URL } from \"../../components/environment\";\nimport {\n\tQUERY_GET_ALL_POSTAL_PLACE,\n\tQUERY_SEARCH_ALL_POSTAL_PLACE,\n} from \"../../graphql/query\";\n\nfunction ExploreScreen(props) {\n\tconst navigation = useNavigation();\n\n\tconst [\n\t\tgetListPostal,\n\t\t{\n\t\t\tonCompleted,\n\t\t\tnetworkStatus,\n\t\t\terror: errorPostal,\n\t\t\tcalled: calledPostal,\n\t\t\tloading: loadingPostal,\n\t\t\tdata: dataPostal,\n\t\t},\n\t] = useLazyQuery(QUERY_GET_ALL_POSTAL_PLACE, {\n\t\tonCompleted: () => {\n\t\t\tconsole.log(\"onCompleted\");\n\t\t\tsetAllPostalList(dataPostal.postals);\n\t\t},\n\t\tonError: () => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorPostal);\n\t\t},\n\t});\n\n\tconst [\n\t\tsearchPostal,\n\t\t{\n\t\t\terror: errorSearch,\n\t\t\tcalled: calledSearch,\n\t\t\tloading: loadingSearch,\n\t\t\tdata: dataSearch,\n\t\t},\n\t] = useLazyQuery(QUERY_SEARCH_ALL_POSTAL_PLACE, {\n\t\tonCompleted: (dataSearch) => {\n\t\t\tconsole.log(\"onCompleted\");\n\t\t\tconsole.log(dataSearch);\n\n\t\t\tif (dataSearch.postals.length === 0) {\n\t\t\t\tsetNoResultFound(true);\n\t\t\t} else {\n\t\t\t\tsetNoResultFound(false);\n\t\t\t\tnavigation.navigate(\"SearchedResults\", {\n\t\t\t\t\tplacesArray: dataSearch.postals,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// setAllPostalList(data.postals);\n\t\t},\n\t\tonError: (errorSearch) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorSearch);\n\t\t},\n\t});\n\n\tconst [mapListIndex, setMapListIndex] = useState(0); // O = 'Carte'  -   1 = 'Liste'\n\tconst [currentLat, setCurrentLat] = useState(48.8648758);\n\tconst [currentLong, setCurrentLong] = useState(2.3501831);\n\tconst [region, setRegion] = useState({\n\t\tlatitude: 21.02828,\n\t\tlongitude: 105.85388,\n\t\tlatitudeDelta: 0.1,\n\t\tlongitudeDelta: 0.1,\n\t});\n\n\tconst [allPostalList, setAllPostalList] = useState({});\n\tconst [allPlacesList, setAllPlacesList] = useState({});\n\tconst [filteredPlaces, setFilteredPlaces] = useState([]);\n\tconst [mapReady, setMapReady] = useState(false);\n\tconst [valueSearch, setValueSearch] = useState(\"\");\n\n\tconst [hasPermissionLocation, setHasPermissionLocation] = useState(null);\n\tconst [hasPermissionCamera, setHasPermissionCamera] = useState(null);\n\n\t// if (loading) return null;\n\t// if (error) return `Error! ${error}`;\n\n\t// if (data) {\n\t//     console.log(4999999999999999, data);\n\t//     // setAllPostalList(data);\n\t// }\n\t//\n\n\tasync function handleKeyPress(e) {\n\t\t// We pass the new value of the text when calling onAccept\n\t\tif (e.key === \"Enter\") {\n\t\t\t// const { onAccept } = this.props;\n\t\t\t// onAccept && onAccept(e.target.value);\n\t\t\tconsole.log(\"enter\");\n\t\t}\n\t}\n\n\tasync function askPermissions() {\n\t\tvar response = await Permissions.askAsync(Permissions.LOCATION);\n\n\t\tconsole.log(\"askPermissions response\");\n\t\tconsole.log(response);\n\n\t\tif (response.status == \"granted\") {\n\t\t\tsetHasPermissionLocation(true);\n\n\t\t\tconsole.log(\"askPermissions granted\");\n\n\t\t\tlet location = await Location.getCurrentPositionAsync();\n\n\t\t\tif (\n\t\t\t\tlocation.coords.latitude != null &&\n\t\t\t\tlocation.coords.longitude != null\n\t\t\t) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"askPermissions here location: \",\n\t\t\t\t\tlocation.coords.latitude,\n\t\t\t\t\tlocation.coords.longitude\n\t\t\t\t);\n\n\t\t\t\tsetCurrentLat(location.coords.latitude);\n\t\t\t\tsetCurrentLong(location.coords.longitude);\n\t\t\t\tsetRegion({\n\t\t\t\t\tlatitude: location.coords.latitude,\n\t\t\t\t\tlongitude: location.coords.longitude,\n\t\t\t\t\tlatitudeDelta: 0.0922,\n\t\t\t\t\tlongitudeDelta: 0.0421,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Location.watchPositionAsync({ distanceInterval: 10 }, (location) => {\n\t\t\t// \tconsole.log(\n\t\t\t// \t\t\"askPermissions here location: \",\n\t\t\t// \t\tlocation.coords.latitude,\n\t\t\t// \t\tlocation.coords.longitude\n\t\t\t// \t);\n\n\t\t\t// \tif (\n\t\t\t// \t\tlocation.coords.latitude != null &&\n\t\t\t// \t\tlocation.coords.longitude != null\n\t\t\t// \t) {\n\t\t\t// \t\tsetCurrentLat(location.coords.latitude);\n\t\t\t// \t\tsetCurrentLong(location.coords.longitude);\n\t\t\t// \t\tsetRegion({\n\t\t\t// \t\t\tlatitude: location.coords.latitude,\n\t\t\t// \t\t\tlongitude: location.coords.longitude,\n\t\t\t// \t\t\tlatitudeDelta: 0.0922,\n\t\t\t// \t\t\tlongitudeDelta: 0.0421,\n\t\t\t// \t\t});\n\t\t\t// \t}\n\t\t\t// });\n\t\t} else {\n\t\t\tsetHasPermissionLocation(false);\n\t\t\tAlert.alert(\"Quyền vị trị không được cấp. Vào cài đặt để đặt lại.\");\n\t\t}\n\t}\n\n\tasync function findPostal() {\n\t\tconsole.log(73, valueSearch);\n\n\t\tif (valueSearch != \"\") {\n\t\t\tsearchPostal({ variables: { name: \"%\" + valueSearch + \"%\" } });\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// store default filter\n\t\tprops.storeFilterDatas({\n\t\t\tplaceDistance: 30000, // in meters\n\t\t\tplaceName: \"\",\n\t\t\tnetworkName: \"\",\n\t\t\trestaurant: true,\n\t\t\tshop: true,\n\t\t\torganize: true,\n\t\t\tpersonal: true,\n\t\t});\n\n\t\tconst getPostals = async () => {\n\t\t\tvar allPostals = await getListPostal();\n\t\t};\n\n\t\tsetMapReady(true);\n\n\t\tgetPostals();\n\n\t\taskPermissions();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst filterPlaces = (places, filter) => {\n\t\t\tconsole.log(\"reload filter\");\n\n\t\t\tlet tempPlaces = [];\n\n\t\t\t// let filterdistance = 10000; // default 10km\n\t\t\t// if (filter.placeDistance != \"\") {\n\t\t\t//     filterdistance = filter.placeDistance;\n\t\t\t// }\n\n\t\t\tlet tempArray = Object.values(places);\n\t\t\ttempArray.forEach((place) => {\n\t\t\t\t// console.log('loop filter', filter.organize, filter.personal)\n\n\t\t\t\t// get distance between user and the place\n\t\t\t\t// geolib.getDistance({placeLat, placeLong}, {userLat, userLong})\n\t\t\t\t// var distanceFromUser = geolib.getDistance(\n\t\t\t\t//     { latitude: place.latitude, longitude: place.longitude },\n\t\t\t\t//     { latitude: currentLat, longitude: currentLong }\n\t\t\t\t// );\n\n\t\t\t\t// if (distanceFromUser < filterdistance) {\n\t\t\t\t// if (filter.networkName == \"\") {\n\n\t\t\t\tif (filter.personal == true && place.type == 2) {\n\t\t\t\t\t// console.log('filtered personal', filter.personal, place.type)\n\t\t\t\t\ttempPlaces.push(place);\n\t\t\t\t}\n\t\t\t\tif (filter.organize == true && place.type == 1) {\n\t\t\t\t\t// console.log('filtered organize', filter.organize, place.type)\n\t\t\t\t\ttempPlaces.push(place);\n\t\t\t\t}\n\t\t\t\tif (filter.personal == false && filter.organize == false) {\n\t\t\t\t\t// console.log('other things')\n\t\t\t\t\ttempPlaces.push(place);\n\t\t\t\t}\n\t\t\t\t// } else if (filter.networkName == place.network) {\n\t\t\t\t//     tempPlaces.push(place);\n\t\t\t\t// }\n\t\t\t\t// }\n\t\t\t});\n\n\t\t\tlet shuffled = tempPlaces\n\t\t\t\t.map((a) => ({ sort: Math.random(), value: a }))\n\t\t\t\t.sort((a, b) => a.sort - b.sort)\n\t\t\t\t.map((a) => a.value);\n\n\t\t\tconsole.log(\"list after filtered: \", shuffled);\n\n\t\t\tsetFilteredPlaces(shuffled);\n\t\t};\n\n\t\tconsole.log(224, props.filter);\n\t\tfilterPlaces(allPostalList, props.filter);\n\t}, [allPostalList, props.filter]);\n\n\tif (mapReady == false) {\n\t\treturn (\n\t\t\t<View style={{ ...styles.loadingContainer }}>\n\t\t\t\t<Text style={{ ...styles.current }}>Đang tải bản đồ</Text>\n\t\t\t</View>\n\t\t);\n\t}\n\n\treturn (\n\t\t<SafeAreaView style={styles.container}>\n\t\t\t<View style={{ flex: 1 }}>\n\t\t\t\t{mapListIndex === 0 ? (\n\t\t\t\t\t<Map\n\t\t\t\t\t\tfilteredPlaces={filteredPlaces}\n\t\t\t\t\t\tuserPosition={{ currentLat, currentLong }}\n\t\t\t\t\t\tregion={region}\n\t\t\t\t\t\taskPermissions={() => askPermissions()}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<List\n\t\t\t\t\t\tfilteredPlaces={filteredPlaces}\n\t\t\t\t\t\tloading={loadingPostal}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\talignSelf: \"center\",\n\t\t\t\t\t\tmarginTop: \"2%\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View style={{ width: 250 }}>\n\t\t\t\t\t\t<SegmentedControl\n\t\t\t\t\t\t\tappearance=\"light\" // 'dark', 'light'\n\t\t\t\t\t\t\t// fontStyle={{color:mint}}             // An object container with color, fontSize, fontFamily   // NOT WORKING ON iOS13+\n\t\t\t\t\t\t\t// activeFontStyle={{color:'white'}}     // An object container with color, fontSize, fontFamily  // NOT WORKING ON iOS13+\n\t\t\t\t\t\t\t// tintColor={mint}                      // Accent color of the control\n\t\t\t\t\t\t\tbackgroundColor=\"white\" // Background color color of the control // NOT WORKING ON iOS13+\n\t\t\t\t\t\t\tvalues={[\"Bản đồ\", \"Danh sách\"]}\n\t\t\t\t\t\t\tselectedIndex={mapListIndex}\n\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\tsetMapListIndex(event.nativeEvent.selectedSegmentIndex);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/*\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tstyle={styles.inputBadge}\n\t\t\t\t\t\t\t\tvalue={valueSearch}\n\t\t\t\t\t\t\t\tonChangeText={(text) => setValueSearch(text)}\n\t\t\t\t\t\t\t\tautoFocus={false}\n\t\t\t\t\t\t\t\tonKeyPress={(e) => handleKeyPress(e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t*/}\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<StatusBar style=\"auto\" />\n\t\t\t{/*\n\t\t\t\t<Text>\n\t\t\t\t\tnetwork: {networkStatus} - error: {errorPostal == true ? \"1\" : 0} -\n\t\t\t\t\tcalled: {calledPostal == true ? \"1\" : 0} - loading:{\" \"}\n\t\t\t\t\t{loadingPostal == true ? \"1\" : 0} - onCompleted:{\" \"}\n\t\t\t\t\t{onCompleted == true ? \"1\" : 0}\n\t\t\t\t</Text>\n\t\t\t\t<Text>\n\t\t\t\t\tpersonal: {props.filter.personal == true ? 1 : 0} - organize:{\" \"}\n\t\t\t\t\t{props.filter.organize == true ? 1 : 0}\n\t\t\t\t</Text>\n\t\t\t*/}\n\t\t</SafeAreaView>\n\t);\n}\n\n// colors vars\nvar blueDark = \"#033C47\";\nvar mintLight = \"#D5EFE8\";\nvar mint = \"#2DB08C\";\nvar grayMedium = \"#879299\";\nvar graySuperLight = \"#f4f4f4\";\nvar greyLight = \"#d8d8d8\";\nvar gold = \"#E8BA00\";\nvar goldLight = \"#faf1cb\";\nvar tomato = \"#ec333b\";\nvar peach = \"#ef7e67\";\nvar peachLight = \"#FED4CB\";\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tloadingContainer: {\n\t\tflex: 1,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tmodalContainer: {\n\t\tflex: 1,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"flex-start\",\n\t\tbackgroundColor: \"#fff\",\n\t},\n\tcurrent: {\n\t\tfontSize: 16,\n\t\tcolor: blueDark,\n\t\ttextAlign: \"left\",\n\t\tlineHeight: 26,\n\t},\n\tcurrentBold: {\n\t\tfontSize: 16,\n\t\tcolor: blueDark,\n\t\ttextAlign: \"left\",\n\t\tlineHeight: 26,\n\t\tfontWeight: \"bold\",\n\t},\n\tmapStyle: {\n\t\twidth: Dimensions.get(\"window\").width,\n\t\theight: Dimensions.get(\"window\").height,\n\t},\n\tinputBadge: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"flex-start\",\n\t\talignItems: \"center\",\n\t\theight: 32,\n\t\twidth: \"50%\",\n\t\tpaddingHorizontal: 15,\n\t\tpaddingVertical: 0,\n\t\tmargin: 10,\n\t\tborderRadius: 10,\n\t\tborderColor: \"#f6f6f6\",\n\t},\n\ttextBadge: {\n\t\tcolor: grayMedium,\n\t},\n});\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tstoreFilterDatas: function (filterDatas) {\n\t\t\tdispatch({ type: \"saveFilterData\", filterDatas });\n\t\t},\n\t\tstoreFav: function (favs) {\n\t\t\tdispatch({ type: \"saveFavs\", favs });\n\t\t},\n\t};\n}\n\nfunction mapStateToProps(state) {\n\treturn { token: state.token, filter: state.filter };\n}\n\n// keep this line at the end\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreScreen);\n"]},"metadata":{},"sourceType":"module"}