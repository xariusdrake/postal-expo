{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useState, useEffect, memo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  containerWithEmoji: {\n    marginTop: 0\n  },\n  containerWithoutEmoji: {\n    marginTop: 5\n  },\n  flagWithSomethingContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  something: {\n    fontSize: 16\n  }\n});\n\nvar FlagText = function FlagText(props) {\n  return React.createElement(CountryText, _extends({}, props, {\n    style: styles.something\n  }));\n};\n\nvar FlagWithSomething = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n      withEmoji = _ref.withEmoji,\n      withCountryNameButton = _ref.withCountryNameButton,\n      withCurrencyButton = _ref.withCurrencyButton,\n      withCallingCodeButton = _ref.withCallingCodeButton,\n      withFlagButton = _ref.withFlagButton,\n      flagSize = _ref.flagSize,\n      placeholder = _ref.placeholder;\n\n  var _useContext = useContext(),\n      translation = _useContext.translation,\n      getCountryInfoAsync = _useContext.getCountryInfoAsync;\n\n  var _useState = useState({\n    countryName: '',\n    currency: '',\n    callingCode: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var countryName = state.countryName,\n      currency = state.currency,\n      callingCode = state.callingCode;\n  useEffect(function () {\n    if (countryCode) {\n      getCountryInfoAsync({\n        countryCode: countryCode,\n        translation: translation\n      }).then(setState).catch(console.warn);\n    }\n  }, [countryCode, withCountryNameButton, withCurrencyButton, withCallingCodeButton]);\n  return React.createElement(View, {\n    style: styles.flagWithSomethingContainer\n  }, countryCode ? React.createElement(Flag, _extends({}, {\n    withEmoji: withEmoji,\n    countryCode: countryCode,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize\n  })) : React.createElement(FlagText, null, placeholder), withCountryNameButton && countryName ? React.createElement(FlagText, null, countryName + ' ') : null, withCurrencyButton && currency ? React.createElement(FlagText, null, \"(\" + currency + \") \") : null, withCallingCodeButton && callingCode ? React.createElement(FlagText, null, \"+\" + callingCode) : null);\n});\nexport var FlagButton = function FlagButton(_ref2) {\n  var withEmoji = _ref2.withEmoji,\n      withCountryNameButton = _ref2.withCountryNameButton,\n      withCallingCodeButton = _ref2.withCallingCodeButton,\n      withCurrencyButton = _ref2.withCurrencyButton,\n      withFlagButton = _ref2.withFlagButton,\n      countryCode = _ref2.countryCode,\n      containerButtonStyle = _ref2.containerButtonStyle,\n      onOpen = _ref2.onOpen,\n      placeholder = _ref2.placeholder;\n\n  var _useTheme = useTheme(),\n      flagSize = _useTheme.flagSizeButton;\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onOpen\n  }, React.createElement(View, {\n    style: [styles.container, withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji, containerButtonStyle]\n  }, React.createElement(FlagWithSomething, _extends({}, {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize,\n    placeholder: placeholder\n  }))));\n};\nFlagButton.defaultProps = {\n  withEmoji: true,\n  withCountryNameButton: false,\n  withCallingCodeButton: false,\n  withCurrencyButton: false,\n  withFlagButton: true\n};","map":{"version":3,"sources":["../src/FlagButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport { TouchableOpacity, StyleSheet, View, } from 'react-native';\nimport { Flag } from './Flag';\nimport { useContext } from './CountryContext';\nimport { CountryText } from './CountryText';\nimport { useTheme } from './CountryTheme';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n    },\n    containerWithEmoji: {\n        marginTop: 0,\n    },\n    containerWithoutEmoji: {\n        marginTop: 5,\n    },\n    flagWithSomethingContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n    },\n    something: { fontSize: 16 },\n});\nconst FlagText = (props) => (React.createElement(CountryText, Object.assign({}, props, { style: styles.something })));\nconst FlagWithSomething = memo(({ countryCode, withEmoji, withCountryNameButton, withCurrencyButton, withCallingCodeButton, withFlagButton, flagSize, placeholder, }) => {\n    const { translation, getCountryInfoAsync } = useContext();\n    const [state, setState] = useState({\n        countryName: '',\n        currency: '',\n        callingCode: '',\n    });\n    const { countryName, currency, callingCode } = state;\n    useEffect(() => {\n        if (countryCode) {\n            getCountryInfoAsync({ countryCode, translation })\n                .then(setState)\n                .catch(console.warn);\n        }\n    }, [\n        countryCode,\n        withCountryNameButton,\n        withCurrencyButton,\n        withCallingCodeButton,\n    ]);\n    return (React.createElement(View, { style: styles.flagWithSomethingContainer },\n        countryCode ? (React.createElement(Flag, Object.assign({}, { withEmoji, countryCode, withFlagButton, flagSize: flagSize }))) : (React.createElement(FlagText, null, placeholder)),\n        withCountryNameButton && countryName ? (React.createElement(FlagText, null, countryName + ' ')) : null,\n        withCurrencyButton && currency ? (React.createElement(FlagText, null, `(${currency}) `)) : null,\n        withCallingCodeButton && callingCode ? (React.createElement(FlagText, null, `+${callingCode}`)) : null));\n});\nexport const FlagButton = ({ withEmoji, withCountryNameButton, withCallingCodeButton, withCurrencyButton, withFlagButton, countryCode, containerButtonStyle, onOpen, placeholder, }) => {\n    const { flagSizeButton: flagSize } = useTheme();\n    return (React.createElement(TouchableOpacity, { activeOpacity: 0.7, onPress: onOpen },\n        React.createElement(View, { style: [\n                styles.container,\n                withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji,\n                containerButtonStyle,\n            ] },\n            React.createElement(FlagWithSomething, Object.assign({}, {\n                countryCode,\n                withEmoji,\n                withCountryNameButton,\n                withCallingCodeButton,\n                withCurrencyButton,\n                withFlagButton,\n                flagSize: flagSize,\n                placeholder,\n            })))));\n};\nFlagButton.defaultProps = {\n    withEmoji: true,\n    withCountryNameButton: false,\n    withCallingCodeButton: false,\n    withCurrencyButton: false,\n    withFlagButton: true,\n};\n//# sourceMappingURL=FlagButton.js.map"]},"metadata":{},"sourceType":"module"}