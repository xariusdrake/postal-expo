{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/auth/forgetPassword/stepNewPassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text } from \"@ui-kitten/components\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { connect } from \"react-redux\";\nimport { AppLoading } from \"expo\";\nimport SMS from \"../../../functions/sms\";\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { MUTATION_FORGET_PASSWORD_CHANGE } from \"../../../graphql/query\";\nimport { isEmpty, isMin } from \"../../../functions/strings\";\nimport appConfigs from \"../../../config\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nfunction ForgetPasswordScreen(props) {\n  var _useMutation = useMutation(MUTATION_FORGET_PASSWORD_CHANGE, {\n    onCompleted: function onCompleted(dataChange) {\n      console.log(\"onCompleted\");\n      setLoading(false);\n      console.log(44, dataChange);\n\n      if (isEmpty(dataChange.update_users.returning[0]) == true) {\n        console.log(\"false\");\n        setTimeout(function () {\n          Alert.alert(\"Có lỗi xảy ra.\");\n        }, 800);\n      } else {\n        console.log(\"success\");\n        props.navigation.navigate(\"SignIn\");\n        setTimeout(function () {\n          Alert.alert(\"Mật khẩu đã được thay đổi\");\n        }, 1000);\n      }\n    },\n    onError: function onError(errorChange) {\n      console.log(\"onError\");\n      setLoading(false);\n      console.log(errorChange);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      changePassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      errorChange = _useMutation2$.error,\n      calledChange = _useMutation2$.called,\n      loadingChange = _useMutation2$.loading,\n      dataChange = _useMutation2$.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordInput = _useState2[0],\n      setPasswordInput = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rePasswordInput = _useState4[0],\n      setRePasswordInput = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var onSubmit = function onSubmit() {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(100, \"onClickSubmit\");\n\n            if (!(passwordInput.length < 1)) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert(\"Vui lòng nhập mật khẩu hiện tại\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!(passwordInput.length < 1)) {\n              _context.next = 11;\n              break;\n            }\n\n            Alert.alert(\"Vui lòng nhập mật khẩu mới\");\n            return _context.abrupt(\"return\");\n\n          case 11:\n            if (!(passwordInput.length < 1)) {\n              _context.next = 16;\n              break;\n            }\n\n            Alert.alert(\"Vui lòng nhập lại mật khẩu mới\");\n            return _context.abrupt(\"return\");\n\n          case 16:\n            if (!(passwordInput != rePasswordInput)) {\n              _context.next = 19;\n              break;\n            }\n\n            Alert.alert(\"Mật khẩu mới không giống nhau\");\n            return _context.abrupt(\"return\");\n\n          case 19:\n            setLoading(true);\n            changePassword({\n              variables: {\n                uid: props.route.params.uid,\n                newPassword: rePasswordInput.toString()\n              }\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (props.token) {\n    props.navigation.navigate(\"Explore\");\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return React.createElement(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      style: styles.scrollview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }, React.createElement(Spinner, {\n      visible: loadingChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }\n    }), React.createElement(View, {\n      style: _objectSpread({}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: Keyboard.dismiss,\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\",\n        margin: 50,\n        marginTop: -120,\n        paddingTop: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 22,\n        color: \"#000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }\n    }, \"\\u0110\\u1EB7t l\\u1EA1i m\\u1EADt kh\\u1EA9u \", props.route.params.uid), React.createElement(Text, {\n      style: [styles.textBlackSize14],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }\n    }, \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\"), React.createElement(TextInput, {\n      value: passwordInput,\n      autoCapitalize: \"none\",\n      underlineColorAndroid: \"#00000000\",\n      returnKeyType: \"next\",\n      onSubmitEditing: function onSubmitEditing() {},\n      style: styles.customEditText,\n      clearButtonMode: \"while-editing\",\n      enablesReturnKeyAutomatically: true,\n      blurOnSubmit: false,\n      placeholder: \"Nhập mật khẩu\",\n      onChangeText: function onChangeText(text) {\n        return setPasswordInput(text);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 8\n      }\n    }), React.createElement(Text, {\n      style: [styles.textBlackSize14],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 8\n      }\n    }, \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\"), React.createElement(TextInput, {\n      value: rePasswordInput,\n      autoCapitalize: \"none\",\n      underlineColorAndroid: \"#00000000\",\n      returnKeyType: \"next\",\n      onSubmitEditing: function onSubmitEditing() {},\n      style: styles.customEditText,\n      clearButtonMode: \"while-editing\",\n      enablesReturnKeyAutomatically: true,\n      blurOnSubmit: false,\n      placeholder: \"Nhập lại mật khẩu\",\n      onChangeText: function onChangeText(text) {\n        return setRePasswordInput(text);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 8\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 8\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.buttonBackgroundBlue,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return onSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: [styles.textWhite, {\n        fontSize: 16\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, \"L\\u01B0u\")))), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginTop: 20,\n        height: 40\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 8\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.buttonBorderBlue,\n      activeOpacity: 0.5,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"SignIn\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.textSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 10\n      }\n    }, \"Quay v\\u1EC1 \\u0111\\u0103ng nh\\u1EADp\")))))));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  forgotContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  forgotPass: {\n    color: \"#0469c1\",\n    fontSize: 12\n  },\n  textBlackSize14: {\n    color: \"#202020\",\n    fontSize: 15,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  buttonBackgroundBlue: {\n    flex: 1,\n    backgroundColor: \"#0469c1\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonBorderBlue: {\n    flex: 1,\n    borderColor: \"#0469c1\",\n    borderRadius: 20,\n    borderWidth: 1.5,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  textSignUp: {\n    fontSize: 16,\n    color: \"#0469c1\"\n  },\n  customEditText: {\n    backgroundColor: \"#F4F5F6\",\n    borderRadius: 10,\n    padding: 8,\n    paddingStart: 15,\n    color: \"#9597A1\"\n  },\n  textWhite: {\n    fontSize: 18,\n    color: \"#fff\"\n  },\n  scrollview: {\n    backgroundColor: \"#fff\"\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token\n  };\n}\n\nexport default connect(mapStateToProps, null)(ForgetPasswordScreen);","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/auth/forgetPassword/stepNewPassword.js"],"names":["React","useState","useEffect","Text","StatusBar","connect","AppLoading","SMS","useQuery","useLazyQuery","useMutation","MUTATION_FORGET_PASSWORD_CHANGE","isEmpty","isMin","appConfigs","Spinner","ForgetPasswordScreen","props","onCompleted","dataChange","console","log","setLoading","update_users","returning","setTimeout","Alert","alert","navigation","navigate","onError","errorChange","changePassword","error","calledChange","called","loadingChange","loading","data","passwordInput","setPasswordInput","rePasswordInput","setRePasswordInput","onSubmit","length","variables","uid","route","params","newPassword","toString","token","styles","scrollview","container","Keyboard","dismiss","width","flexDirection","margin","marginTop","paddingTop","fontSize","color","textBlackSize14","customEditText","text","buttonBackgroundBlue","padding","textWhite","height","buttonBorderBlue","textSignUp","StyleSheet","create","flex","forgotContainer","alignItems","forgotPass","marginBottom","backgroundColor","borderRadius","justifyContent","borderColor","borderWidth","paddingStart","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tStyleSheet,\n\tScrollView,\n\tView,\n\tTouchableWithoutFeedback,\n\tKeyboard,\n\tPlatform,\n\tAsyncStorage,\n\tTouchableOpacity,\n\tTextInput,\n\tAlert,\n} from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport { connect } from \"react-redux\";\n\n// custom fonts\nimport { AppLoading } from \"expo\";\nimport SMS from \"../../../functions/sms\";\n\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { MUTATION_FORGET_PASSWORD_CHANGE } from \"../../../graphql/query\";\n\nimport { isEmpty, isMin } from \"../../../functions/strings\";\n\nimport appConfigs from \"../../../config\";\n\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nfunction ForgetPasswordScreen(props) {\n\tconst [\n\t\tchangePassword,\n\t\t{\n\t\t\terror: errorChange,\n\t\t\tcalled: calledChange,\n\t\t\tloading: loadingChange,\n\t\t\tdata: dataChange,\n\t\t},\n\t] = useMutation(MUTATION_FORGET_PASSWORD_CHANGE, {\n\t\tonCompleted: (dataChange) => {\n\t\t\tconsole.log(\"onCompleted\");\n\t\t\tsetLoading(false);\n\t\t\tconsole.log(44, dataChange);\n\n\t\t\tif (isEmpty(dataChange.update_users.returning[0]) == true) {\n\t\t\t\tconsole.log(\"false\");\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tAlert.alert(\"Có lỗi xảy ra.\");\n\t\t\t\t}, 800);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"success\");\n\n\t\t\t\tprops.navigation.navigate(\"SignIn\");\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tAlert.alert(\"Mật khẩu đã được thay đổi\");\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t\tonError: (errorChange) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tsetLoading(false);\n\t\t\tconsole.log(errorChange);\n\t\t},\n\t});\n\tconst [passwordInput, setPasswordInput] = useState(null);\n\tconst [rePasswordInput, setRePasswordInput] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst onSubmit = async () => {\n\t\tconsole.log(100, \"onClickSubmit\");\n\n\t\tif (passwordInput.length < 1) {\n\t\t\tAlert.alert(\"Vui lòng nhập mật khẩu hiện tại\");\n\t\t\treturn;\n\t\t} else if (passwordInput.length < 1) {\n\t\t\tAlert.alert(\"Vui lòng nhập mật khẩu mới\");\n\t\t\treturn;\n\t\t} else if (passwordInput.length < 1) {\n\t\t\tAlert.alert(\"Vui lòng nhập lại mật khẩu mới\");\n\t\t\treturn;\n\t\t} else if (passwordInput != rePasswordInput) {\n\t\t\tAlert.alert(\"Mật khẩu mới không giống nhau\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetLoading(true);\n\n\t\tchangePassword({\n\t\t\tvariables: {\n\t\t\t\tuid: props.route.params.uid,\n\t\t\t\tnewPassword: rePasswordInput.toString(),\n\t\t\t},\n\t\t});\n\t};\n\n\tif (props.token) {\n\t\tprops.navigation.navigate(\"Explore\");\n\t\treturn <AppLoading />;\n\t} else {\n\t\treturn (\n\t\t\t<ScrollView\n\t\t\t\tshowsVerticalScrollIndicator={false}\n\t\t\t\tstyle={styles.scrollview}\n\t\t\t>\n\t\t\t\t<Spinner visible={loadingChange} />\n\t\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t\t<TouchableWithoutFeedback\n\t\t\t\t\t\tonPress={Keyboard.dismiss}\n\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\t\t\t\tmargin: 50,\n\t\t\t\t\t\t\t\tmarginTop: -120,\n\t\t\t\t\t\t\t\tpaddingTop: 300,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontSize: 22,\n\t\t\t\t\t\t\t\t\tcolor: \"#000\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tĐặt lại mật khẩu {props.route.params.uid}\n\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t<Text style={[styles.textBlackSize14]}>\n\t\t\t\t\t\t\t\tMật khẩu mới\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tvalue={passwordInput}\n\t\t\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\t\t\tunderlineColorAndroid=\"#00000000\"\n\t\t\t\t\t\t\t\treturnKeyType={\"next\"}\n\t\t\t\t\t\t\t\tonSubmitEditing={() => {}}\n\t\t\t\t\t\t\t\tstyle={styles.customEditText}\n\t\t\t\t\t\t\t\tclearButtonMode=\"while-editing\"\n\t\t\t\t\t\t\t\tenablesReturnKeyAutomatically={true}\n\t\t\t\t\t\t\t\tblurOnSubmit={false}\n\t\t\t\t\t\t\t\tplaceholder={\"Nhập mật khẩu\"}\n\t\t\t\t\t\t\t\tonChangeText={(text) => setPasswordInput(text)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Text style={[styles.textBlackSize14]}>\n\t\t\t\t\t\t\t\tNhập lại mật khẩu\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tvalue={rePasswordInput}\n\t\t\t\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\t\t\t\tunderlineColorAndroid=\"#00000000\"\n\t\t\t\t\t\t\t\treturnKeyType={\"next\"}\n\t\t\t\t\t\t\t\tonSubmitEditing={() => {}}\n\t\t\t\t\t\t\t\tstyle={styles.customEditText}\n\t\t\t\t\t\t\t\tclearButtonMode=\"while-editing\"\n\t\t\t\t\t\t\t\tenablesReturnKeyAutomatically={true}\n\t\t\t\t\t\t\t\tblurOnSubmit={false}\n\t\t\t\t\t\t\t\tplaceholder={\"Nhập lại mật khẩu\"}\n\t\t\t\t\t\t\t\tonChangeText={(text) =>\n\t\t\t\t\t\t\t\t\tsetRePasswordInput(text)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{ flexDirection: \"row\", marginTop: 24 }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tstyle={styles.buttonBackgroundBlue}\n\t\t\t\t\t\t\t\t\tactiveOpacity={0.5}\n\t\t\t\t\t\t\t\t\tonPress={() => onSubmit()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<View style={{ padding: 10 }}>\n\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\tstyle={[\n\t\t\t\t\t\t\t\t\t\t\t\tstyles.textWhite,\n\t\t\t\t\t\t\t\t\t\t\t\t{ fontSize: 16 },\n\t\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLưu\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\tmarginTop: 20,\n\t\t\t\t\t\t\t\t\theight: 40,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\t\tstyle={styles.buttonBorderBlue}\n\t\t\t\t\t\t\t\t\tactiveOpacity={0.5}\n\t\t\t\t\t\t\t\t\tonPress={() =>\n\t\t\t\t\t\t\t\t\t\tprops.navigation.navigate(\"SignIn\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={styles.textSignUp}>\n\t\t\t\t\t\t\t\t\t\tQuay về đăng nhập\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t</View>\n\t\t\t</ScrollView>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tflexDirection: \"column\",\n\t},\n\tforgotContainer: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t},\n\tforgotPass: {\n\t\tcolor: \"#0469c1\",\n\t\tfontSize: 12,\n\t},\n\n\ttextBlackSize14: {\n\t\tcolor: \"#202020\",\n\t\tfontSize: 15,\n\t\tmarginTop: 20,\n\t\tmarginBottom: 10,\n\t},\n\tbuttonBackgroundBlue: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#0469c1\",\n\t\tborderRadius: 20,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tbuttonBorderBlue: {\n\t\tflex: 1,\n\t\tborderColor: \"#0469c1\",\n\t\tborderRadius: 20,\n\t\tborderWidth: 1.5,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\ttextSignUp: {\n\t\tfontSize: 16,\n\t\tcolor: \"#0469c1\",\n\t},\n\tcustomEditText: {\n\t\tbackgroundColor: \"#F4F5F6\",\n\t\tborderRadius: 10,\n\t\tpadding: 8,\n\t\tpaddingStart: 15,\n\t\tcolor: \"#9597A1\",\n\t},\n\ttextWhite: {\n\t\tfontSize: 18,\n\t\tcolor: \"#fff\",\n\t},\n\n\tscrollview: {\n\t\tbackgroundColor: \"#fff\",\n\t},\n});\n\nfunction mapStateToProps(state) {\n\treturn { token: state.token };\n}\n\nexport default connect(mapStateToProps, null)(ForgetPasswordScreen);\n"]},"metadata":{},"sourceType":"module"}