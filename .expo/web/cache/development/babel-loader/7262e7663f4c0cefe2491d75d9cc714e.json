{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nvar X_WIDTH = 375;\nvar X_HEIGHT = 812;\nvar XSMAX_WIDTH = 414;\nvar XSMAX_HEIGHT = 896;\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nexport var isIPhoneX = function isIPhoneX() {\n  return Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS ? width === X_WIDTH && height === X_HEIGHT || width === XSMAX_WIDTH && height === XSMAX_HEIGHT : false;\n};\nexport var StatusBarHeight = Platform.select({\n  ios: isIPhoneX() ? 44 : 20,\n  android: StatusBar.currentHeight,\n  default: 0\n});\nexport function getRegionForCoordinates(points) {\n  var minX, maxX, minY, maxY;\n\n  (function (point) {\n    minX = point.latitude;\n    maxX = point.latitude;\n    minY = point.longitude;\n    maxY = point.longitude;\n  })(points[0]);\n\n  points.map(function (point) {\n    minX = Math.min(minX, point.latitude);\n    maxX = Math.max(maxX, point.latitude);\n    minY = Math.min(minY, point.longitude);\n    maxY = Math.max(maxY, point.longitude);\n  });\n  var midX = (minX + maxX) / 2;\n  var midY = (minY + maxY) / 2;\n  var deltaX = maxX - minX;\n  var deltaY = maxY - minY;\n  return {\n    latitude: midX,\n    longitude: midY,\n    latitudeDelta: deltaX + 5,\n    longitudeDelta: deltaY\n  };\n}","map":{"version":3,"sources":["/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/functions/functionFile.js"],"names":["X_WIDTH","X_HEIGHT","XSMAX_WIDTH","XSMAX_HEIGHT","Dimensions","get","height","width","isIPhoneX","Platform","OS","isPad","isTVOS","StatusBarHeight","select","ios","android","StatusBar","currentHeight","default","getRegionForCoordinates","points","minX","maxX","minY","maxY","point","latitude","longitude","map","Math","min","max","midX","midY","deltaX","deltaY","latitudeDelta","longitudeDelta"],"mappings":";;;AAEA,IAAMA,OAAO,GAAG,GAAhB;AACA,IAAMC,QAAQ,GAAG,GAAjB;AAEA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,YAAY,GAAG,GAArB;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;AAEhB,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB,CAACD,QAAQ,CAACE,KAAnC,IAA4C,CAACF,QAAQ,CAACG,MAAtD,GACzBL,KAAK,KAAKP,OAAV,IAAqBM,MAAM,KAAKL,QAAhC,IAA4CM,KAAK,KAAKL,WAAV,IAAyBI,MAAM,KAAKH,YADvD,GAEzB,KAFmB;AAAA,CAAlB;AAIP,OAAO,IAAMU,eAAe,GAAGJ,QAAQ,CAACK,MAAT,CAAgB;AAC3CC,EAAAA,GAAG,EAAEP,SAAS,KAAK,EAAL,GAAU,EADmB;AAE3CQ,EAAAA,OAAO,EAAEC,SAAS,CAACC,aAFwB;AAG3CC,EAAAA,OAAO,EAAE;AAHkC,CAAhB,CAAxB;AAMP,OAAO,SAASC,uBAAT,CAAiCC,MAAjC,EAAyC;AAEhD,MAAIC,IAAJ,EAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB;;AAGA,GAAC,UAACC,KAAD,EAAW;AACRJ,IAAAA,IAAI,GAAGI,KAAK,CAACC,QAAb;AACAJ,IAAAA,IAAI,GAAGG,KAAK,CAACC,QAAb;AACAH,IAAAA,IAAI,GAAGE,KAAK,CAACE,SAAb;AACAH,IAAAA,IAAI,GAAGC,KAAK,CAACE,SAAb;AACH,GALD,EAKGP,MAAM,CAAC,CAAD,CALT;;AAQAA,EAAAA,MAAM,CAACQ,GAAP,CAAW,UAACH,KAAD,EAAW;AAClBJ,IAAAA,IAAI,GAAGQ,IAAI,CAACC,GAAL,CAAST,IAAT,EAAeI,KAAK,CAACC,QAArB,CAAP;AACAJ,IAAAA,IAAI,GAAGO,IAAI,CAACE,GAAL,CAAST,IAAT,EAAeG,KAAK,CAACC,QAArB,CAAP;AACAH,IAAAA,IAAI,GAAGM,IAAI,CAACC,GAAL,CAASP,IAAT,EAAeE,KAAK,CAACE,SAArB,CAAP;AACAH,IAAAA,IAAI,GAAGK,IAAI,CAACE,GAAL,CAASP,IAAT,EAAeC,KAAK,CAACE,SAArB,CAAP;AACC,GALL;AAOI,MAAMK,IAAI,GAAG,CAACX,IAAI,GAAGC,IAAR,IAAgB,CAA7B;AACA,MAAMW,IAAI,GAAG,CAACV,IAAI,GAAGC,IAAR,IAAgB,CAA7B;AACA,MAAMU,MAAM,GAAIZ,IAAI,GAAGD,IAAvB;AACA,MAAMc,MAAM,GAAIX,IAAI,GAAGD,IAAvB;AAEA,SAAO;AACHG,IAAAA,QAAQ,EAAEM,IADP;AAEHL,IAAAA,SAAS,EAAEM,IAFR;AAGHG,IAAAA,aAAa,EAAEF,MAAM,GAAG,CAHrB;AAIHG,IAAAA,cAAc,EAAEF;AAJb,GAAP;AAMH","sourcesContent":["import { Dimensions, Platform, StatusBar } from 'react-native';\n\nconst X_WIDTH = 375;\nconst X_HEIGHT = 812;\n\nconst XSMAX_WIDTH = 414;\nconst XSMAX_HEIGHT = 896;\n\nconst { height, width } = Dimensions.get('window');\n\nexport const isIPhoneX = () => Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS\n    ? width === X_WIDTH && height === X_HEIGHT || width === XSMAX_WIDTH && height === XSMAX_HEIGHT\n    : false;\n\nexport const StatusBarHeight = Platform.select({\n    ios: isIPhoneX() ? 44 : 20,\n    android: StatusBar.currentHeight,\n    default: 0\n})\n\nexport function getRegionForCoordinates(points) {\n// points should be an array of { latitude: X, longitude: Y }\nlet minX, maxX, minY, maxY;\n\n// init first point\n((point) => {\n    minX = point.latitude;\n    maxX = point.latitude;\n    minY = point.longitude;\n    maxY = point.longitude;\n})(points[0]);\n\n// calculate rect\npoints.map((point) => {\n    minX = Math.min(minX, point.latitude);\n    maxX = Math.max(maxX, point.latitude);\n    minY = Math.min(minY, point.longitude);\n    maxY = Math.max(maxY, point.longitude);\n    });\n\n    const midX = (minX + maxX) / 2;\n    const midY = (minY + maxY) / 2;\n    const deltaX = (maxX - minX);\n    const deltaY = (maxY - minY);\n\n    return {\n        latitude: midX,\n        longitude: midY,\n        latitudeDelta: deltaX + 5,\n        longitudeDelta: deltaY\n    };\n}\n"]},"metadata":{},"sourceType":"module"}