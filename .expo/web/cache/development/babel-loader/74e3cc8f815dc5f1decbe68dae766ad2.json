{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/postal/myPostal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { List, ListItem, Divider, Text, Button } from \"@ui-kitten/components\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { connect } from \"react-redux\";\nimport { QUERY_GET_ALL_MY_POSTAL } from \"../../graphql/query\";\n\nfunction MyPostalScreen(props) {\n  var _useLazyQuery = useLazyQuery(QUERY_GET_ALL_MY_POSTAL, {\n    onCompleted: function onCompleted(dataPostal) {\n      console.log(\"xxx onCompleted\");\n      console.log(dataPostal);\n      saveMyPostalList(dataPostal.postals);\n    },\n    onError: function onError(queryError) {\n      console.log(\"onError\");\n      console.log(queryError);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getAllMyPostal = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      queryLoading = _useLazyQuery2$.loading,\n      queryError = _useLazyQuery2$.error,\n      dataPostal = _useLazyQuery2$.data;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      myPostalList = _useState2[0],\n      saveMyPostalList = _useState2[1];\n\n  useEffect(function () {\n    getAllMyPostal({\n      variables: {\n        uid: props.infos.id\n      }\n    });\n  }, []);\n\n  var waitingLabel = function waitingLabel() {\n    return React.createElement(Button, {\n      size: \"tiny\",\n      status: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }\n    }, \"Ch\\u1EDD duy\\u1EC7t\");\n  };\n\n  var approvedLabel = function approvedLabel() {\n    return React.createElement(Button, {\n      size: \"tiny\",\n      status: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }\n    }, \"Ch\\u1EDD duy\\u1EC7t\");\n  };\n\n  var cancelLabel = function cancelLabel() {\n    return React.createElement(Button, {\n      size: \"tiny\",\n      status: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, \"Ch\\u1EDD duy\\u1EC7t\");\n  };\n\n  if (props.token) {\n    if (myPostalList.length > 1) {\n      var labelStatus;\n\n      var renderItem = function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n\n        if (item.type == 1) {\n          labelStatus = waitingLabel;\n        } else if (item.type == 2) {\n          labelStatus = approvedLabel;\n        } else if (item.type == 0) {\n          labelStatus = cancelLabel;\n        } else {\n          labelStatus = \"\";\n        }\n\n        return React.createElement(ListItem, {\n          key: item.id,\n          title: \"\" + item.name,\n          description: \"\" + item.address,\n          onPress: function onPress() {\n            console.log(\"click move place\");\n            props.navigation.navigate(\"Postal\", {\n              postal: item\n            });\n          },\n          accessoryRight: labelStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 6\n          }\n        });\n      };\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }\n      }, React.createElement(Spinner, {\n        visible: queryLoading == 1 ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        category: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }\n      }, \"\\u0110\\u1ECBa \\u0111i\\u1EC3m c\\u1EE7a b\\u1EA1n\"), React.createElement(List, {\n        data: myPostalList,\n        ItemSeparatorComponent: Divider,\n        renderItem: renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }\n      }));\n    } else {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }\n      }, React.createElement(Spinner, {\n        visible: queryLoading == 1 ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }\n      }), React.createElement(Text, {\n        style: styles.title,\n        category: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }\n      }, \"\\u0110\\u1ECBa \\u0111i\\u1EC3m c\\u1EE7a b\\u1EA1n\"));\n    }\n  } else {\n    return React.createElement(View, {\n      style: _objectSpread({}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      category: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, \"\\u0110\\u1EC3 \\u0111\\u0103ng k\\xFD m\\xE3 b\\u01B0u ch\\xEDnh.\", \"\\n\", \"\\u0110\\u1EA7u ti\\xEAn, h\\xE3y \\u0111\\u0103ng nh\\u1EADp\"), React.createElement(Button, {\n      size: \"small\",\n      appearance: \"outline\",\n      status: \"info\",\n      onPress: function onPress() {\n        props.navigation.navigate(\"SignIn\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, \"\\u0110\\u0103ng nh\\u1EADp\"));\n  }\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    paddingTop: 40,\n    padding: 17,\n    backgroundColor: \"#fff\",\n    textAlign: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 25,\n    backgroundColor: \"#FFFFFF\"\n  },\n  loadingView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  current20: {\n    color: \"#033C47\",\n    fontSize: 20\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    token: state.token,\n    USER_INFO: state.infos,\n    infos: state.infos\n  };\n}\n\nexport default connect(mapStateToProps, null)(MyPostalScreen);","map":{"version":3,"sources":["/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/postal/myPostal.js"],"names":["React","useState","useEffect","useLazyQuery","List","ListItem","Divider","Text","Button","Spinner","connect","QUERY_GET_ALL_MY_POSTAL","MyPostalScreen","props","onCompleted","dataPostal","console","log","saveMyPostalList","postals","onError","queryError","getAllMyPostal","queryLoading","loading","error","data","myPostalList","variables","uid","infos","id","waitingLabel","approvedLabel","cancelLabel","token","length","labelStatus","renderItem","item","index","type","name","address","navigation","navigate","postal","styles","title","container","StyleSheet","create","paddingTop","padding","backgroundColor","textAlign","flex","justifyContent","alignItems","paddingHorizontal","loadingView","current20","color","fontSize","mapStateToProps","state","USER_INFO"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { StyleSheet, View } from \"react-native\";\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { List, ListItem, Divider, Text, Button } from \"@ui-kitten/components\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\n// import { FontAwesome5 } from \"@expo/vector-icons\";\n\nimport { connect } from \"react-redux\";\n\nimport { QUERY_GET_ALL_MY_POSTAL } from \"../../graphql/query\";\n\nfunction MyPostalScreen(props) {\n\n\tconst [\n\t\tgetAllMyPostal,\n\t\t{ loading: queryLoading, error: queryError, data: dataPostal },\n\t] = useLazyQuery(QUERY_GET_ALL_MY_POSTAL, {\n\t\tonCompleted: (dataPostal) => {\n\t\t\tconsole.log(\"xxx onCompleted\");\n\t\t\tconsole.log(dataPostal);\n\t\t\tsaveMyPostalList(dataPostal.postals);\n\t\t\t// setAllPostalList(data.postals);\n\t\t},\n\t\tonError: (queryError) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(queryError);\n\t\t},\n\t});\n\n\t\n\t\t// console.log(399, props.USER_INFO.id)\n\t\t// console.log('new one')\n\n\tconst [myPostalList, saveMyPostalList] = useState({});\n\n\tuseEffect(() => {\n\t\t// console.log(54, \"info user\");\n\t\t// console.log(55, props);\n\t\t// console.log(56, props.USER_INFO.id);\n\t\tgetAllMyPostal({ variables: { uid: props.infos.id } });\n\t}, []);\n\n\tconst waitingLabel = () => {\n\t\treturn (\n\t\t\t<Button size=\"tiny\" status=\"warning\">\n\t\t\t\tChờ duyệt\n\t\t\t</Button>\n\t\t);\n\t};\n\n\tconst approvedLabel = () => {\n\t\treturn (\n\t\t\t<Button size=\"tiny\" status=\"warning\">\n\t\t\t\tChờ duyệt\n\t\t\t</Button>\n\t\t);\n\t};\n\n\tconst cancelLabel = () => {\n\t\treturn (\n\t\t\t<Button size=\"tiny\" status=\"warning\">\n\t\t\t\tChờ duyệt\n\t\t\t</Button>\n\t\t);\n\t};\n\n\tif (props.token) {\n\t\tif (myPostalList.length > 1) {\n\t\t\tlet labelStatus;\n\n\t\t\tlet renderItem = ({ item, index }) => {\n\t\t\t\t// console.log(\"info my item postal\");\n\t\t\t\t// console.log(item);\n\n\t\t\t\tif (item.type == 1) {\n\t\t\t\t\tlabelStatus = waitingLabel;\n\t\t\t\t} else if (item.type == 2) {\n\t\t\t\t\tlabelStatus = approvedLabel;\n\t\t\t\t} else if (item.type == 0) {\n\t\t\t\t\tlabelStatus = cancelLabel;\n\t\t\t\t} else {\n\t\t\t\t\tlabelStatus = \"\";\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\ttitle={`${item.name}`}\n\t\t\t\t\t\tdescription={`${item.address}`}\n\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\tconsole.log(\"click move place\");\n\t\t\t\t\t\t\tprops.navigation.navigate(\"Postal\", {\n\t\t\t\t\t\t\t\tpostal: item,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\taccessoryRight={labelStatus}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Spinner visible={queryLoading == 1 ? true : false} />\n\t\t\t\t\t<Text style={styles.title} category=\"h5\">\n\t\t\t\t\t\tĐịa điểm của bạn\n\t\t\t\t\t</Text>\n\t\t\t\t\t<List\n\t\t\t\t\t\tdata={myPostalList}\n\t\t\t\t\t\tItemSeparatorComponent={Divider}\n\t\t\t\t\t\trenderItem={renderItem}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Spinner visible={queryLoading == 1 ? true : false} />\n\t\t\t\t\t<Text style={styles.title} category=\"h5\">\n\t\t\t\t\t\tĐịa điểm của bạn\n\t\t\t\t\t</Text>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn (\n\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t<Text style={styles.title} category=\"h6\">\n\t\t\t\t\tĐể đăng ký mã bưu chính.{\"\\n\"}Đầu tiên, hãy đăng nhập\n\t\t\t\t</Text>\n\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tappearance=\"outline\"\n\t\t\t\t\tstatus=\"info\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tprops.navigation.navigate(\"SignIn\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tĐăng nhập\n\t\t\t\t</Button>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\ttitle: {\n\t\tpaddingTop: 40,\n\t\tpadding: 17,\n\t\tbackgroundColor: \"#fff\",\n\t\ttextAlign: \"center\",\n\t},\n\n\tcontainer: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tpaddingHorizontal: 25,\n\t\tbackgroundColor: \"#FFFFFF\",\n\t},\n\tloadingView: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"transparent\",\n\t},\n\tcurrent20: {\n\t\tcolor: \"#033C47\",\n\t\tfontSize: 20,\n\t},\n});\n\nfunction mapStateToProps(state) {\n\treturn { token: state.token, USER_INFO: state.infos, infos: state.infos };\n}\n\n// keep this line at the end\nexport default connect(mapStateToProps, null)(MyPostalScreen);\n"]},"metadata":{},"sourceType":"module"}