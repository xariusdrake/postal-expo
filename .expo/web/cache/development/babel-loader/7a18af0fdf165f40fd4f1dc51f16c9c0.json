{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/postal/detailPostal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from \"react-redux\";\nimport * as Location from \"expo-location\";\nimport { Card, Text } from \"@ui-kitten/components\";\nimport MapView from \"react-native-maps\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport Geocode from \"react-geocode\";\nimport appConfigs from \"../../config\";\nimport { styles } from \"../styles/styles\";\nGeocode.setApiKey(appConfigs.GOOGLE_MAP.API_KEY_2);\n\nfunction DetailPostalScreen(props) {\n  var response = props.route.params;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      getAddress = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      getLatitude = _useState4[0],\n      setLatitude = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      getLongtitude = _useState6[0],\n      setLongtitude = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (response.postal.type == 1) {\n                attemptGeocodeAsync();\n              } else if (response.postal.type == 2) {\n                if (response.postal.lat > 0) {\n                  setLatitude(Number(response.postal.lat));\n                  setLongtitude(Number(response.postal.long));\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var attemptGeocodeAsync = function attemptGeocodeAsync() {\n    var valueSearch;\n    return _regeneratorRuntime.async(function attemptGeocodeAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(140, \"_attemptGeocodeAsync\");\n            valueSearch = response.postal.name;\n            valueSearch = valueSearch.replace(\"(\", \"\").replace(\")\", \"\");\n            console.log(\"valueSearch\");\n            console.log(valueSearch);\n            Geocode.fromAddress(valueSearch).then(function (response) {\n              console.log(\"from address\");\n              console.log(response);\n\n              if (response.results[0].geometry.location.lat > 1) {\n                console.log(\"work\");\n                setLatitude(response.results[0].geometry.location.lat);\n                setLongtitude(response.results[0].geometry.location.lng);\n                var address = response.results[0].formatted_address;\n                address = address.replace(\", Vietnam\", \"\");\n                setAddress(address);\n              }\n            }, function (error) {\n              console.error(error);\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.head),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.goBack();\n    },\n    title: \"Dismiss\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-close\",\n    size: 34,\n    color: \"#879299\",\n    style: {\n      textAlign: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }\n  }))), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    category: \"h4\",\n    status: \"info\",\n    style: {\n      paddingBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, response.postal.name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, \"M\\xE3 b\\u01B0u ch\\xEDnh:\", \" \", response.postal.postal_code != null ? response.postal.postal_code : \"Đang cập nhật\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i:\", \" \", response.postal.phone != null ? response.postal.phone : \"Đang cập nhật\"), response.postal.type == 1 && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 6\n    }\n  }, \"\\u0110\\u1ECBa ch\\u1EC9: \", getAddress != null ? getAddress : \"Đang cập nhật\"), response.postal.type == 2 && React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 6\n    }\n  }, \"\\u0110\\u1ECBa ch\\u1EC9: \", response.postal.address != null ? response.postal.address : \"Đang cập nhật\")), getLatitude != null && getLongtitude != null && React.createElement(MapView, {\n    initialRegion: {\n      latitude: getLatitude,\n      longitude: getLongtitude,\n      latitudeDelta: 0.009,\n      longitudeDelta: 0.001\n    },\n    showsUserLocation: true,\n    showsMyLocationButton: true,\n    followsUserLocation: true,\n    showsMyLocationButton: true,\n    loadingEnabled: true,\n    style: stylesX.mapStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView.Marker, {\n    title: response.postal.name,\n    key: 1,\n    coordinate: {\n      latitude: getLatitude,\n      longitude: getLongtitude\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  })));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    storeFav: function storeFav(favs) {\n      dispatch({\n        type: \"updateFavs\",\n        favs: favs\n      });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    favs: state.favs,\n    token: state.token\n  };\n}\n\nvar stylesX = StyleSheet.create({\n  mapStyle: {\n    width: Dimensions.get(\"window\").width,\n    height: 275\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPostalScreen);","map":{"version":3,"sources":["/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/postal/detailPostal.js"],"names":["React","useState","useEffect","connect","Location","Card","Text","MapView","Ionicons","FontAwesome","Geocode","appConfigs","styles","setApiKey","GOOGLE_MAP","API_KEY_2","DetailPostalScreen","props","response","route","params","getAddress","setAddress","getLatitude","setLatitude","getLongtitude","setLongtitude","postal","type","attemptGeocodeAsync","lat","Number","long","console","log","valueSearch","name","replace","fromAddress","then","results","geometry","location","lng","address","formatted_address","error","head","navigation","goBack","textAlign","paddingBottom","postal_code","phone","latitude","longitude","latitudeDelta","longitudeDelta","stylesX","mapStyle","mapDispatchToProps","dispatch","storeFav","favs","mapStateToProps","state","token","StyleSheet","create","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tView,\n\tScrollView,\n\tTouchableOpacity,\n\tDimensions,\n\tStyleSheet,\n} from \"react-native\";\n\nimport { connect } from \"react-redux\";\nimport * as Location from \"expo-location\";\n\nimport { Card, Text } from \"@ui-kitten/components\";\nimport MapView from \"react-native-maps\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nimport Geocode from \"react-geocode\";\n\nimport appConfigs from \"../../config\";\n\n// styles\nimport { styles } from \"../styles/styles\";\n\nGeocode.setApiKey(appConfigs.GOOGLE_MAP.API_KEY_2);\n\nfunction DetailPostalScreen(props) {\n\tvar response = props.route.params;\n\n\tconst [getAddress, setAddress] = useState(null);\n\n\tconst [getLatitude, setLatitude] = useState(null);\n\tconst [getLongtitude, setLongtitude] = useState(null);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tif (response.postal.type == 1) {\n\t\t\t\tattemptGeocodeAsync();\n\t\t\t} else if (response.postal.type == 2) {\n\n\t\t\t\tif (response.postal.lat > 0) {\n\t\t\t\t\tsetLatitude(Number(response.postal.lat))\n\t\t\t\t\tsetLongtitude(Number(response.postal.long))\n\t\t\t\t}\n\n\t\t\t}\n\t\t})();\n\t}, []);\n\n\tconst attemptGeocodeAsync = async () => {\n\n\t\tconsole.log(140, \"_attemptGeocodeAsync\");\n\n\t\tlet valueSearch = response.postal.name;\n\t\tvalueSearch = valueSearch.replace(\"(\", \"\").replace(\")\", \"\");\n\t\t// valueSearch = valueSearch + \" Vietnam\";\n\n\t\tconsole.log(\"valueSearch\");\n\t\tconsole.log(valueSearch);\n\n\t\tGeocode.fromAddress(valueSearch).then(\n\t\t\t(response) => {\n\t\t\t\tconsole.log(\"from address\");\n\t\t\t\tconsole.log(response);\n\n\t\t\t\tif (response.results[0].geometry.location.lat > 1) {\n\t\t\t\t\tconsole.log(\"work\");\n\t\t\t\t\tsetLatitude(response.results[0].geometry.location.lat);\n\t\t\t\t\tsetLongtitude(response.results[0].geometry.location.lng);\n\n\t\t\t\t\tlet address = response.results[0].formatted_address;\n\t\t\t\t\taddress = address.replace(\", Vietnam\", \"\");\n\t\t\t\t\tsetAddress(address);\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\n\t\t// try {\n\t\t// \tlet result = await Location.geocodeAsync(valueSearch);\n\n\t\t// \tconsole.log(\"geo result: \" + result);\n\t\t// \tconsole.log(result);\n\n\t\t// \tif (result[0].latitude > 1) {\n\t\t// \t\tconsole.log(\"work\");\n\t\t// \t\tsetLatitude(result[0].latitude);\n\t\t// \t\tsetLongtitude(result[0].longitude);\n\t\t// \t}\n\t\t// } catch (e) {\n\t\t// \tconsole.log(\"geo catch: \" + e.message);\n\t\t// } finally {\n\t\t// \tconsole.log(\"geo finally\");\n\t\t// }\n\n\t\t// console.log(90, getLocation);\n\t};\n\n\treturn (\n\t\t<View>\n\t\t\t<View style={{ ...styles.head }}>\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => props.navigation.goBack()}\n\t\t\t\t\ttitle=\"Dismiss\"\n\t\t\t\t>\n\t\t\t\t\t<Ionicons\n\t\t\t\t\t\tname=\"md-close\"\n\t\t\t\t\t\tsize={34}\n\t\t\t\t\t\tcolor={\"#879299\"}\n\t\t\t\t\t\tstyle={{ textAlign: \"right\" }}\n\t\t\t\t\t/>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t\t<Card>\n\t\t\t\t<Text category=\"h4\" status=\"info\" style={{ paddingBottom: 20 }}>\n\t\t\t\t\t{response.postal.name}\n\t\t\t\t</Text>\n\t\t\t\t<Text>\n\t\t\t\t\tMã bưu chính:{\" \"}\n\t\t\t\t\t{response.postal.postal_code != null\n\t\t\t\t\t\t? response.postal.postal_code\n\t\t\t\t\t\t: \"Đang cập nhật\"}\n\t\t\t\t</Text>\n\t\t\t\t<Text>\n\t\t\t\t\tSố điện thoại:{\" \"}\n\t\t\t\t\t{response.postal.phone != null\n\t\t\t\t\t\t? response.postal.phone\n\t\t\t\t\t\t: \"Đang cập nhật\"}\n\t\t\t\t</Text>\n\t\t\t\t{response.postal.type == 1 && (\n\t\t\t\t\t<Text>\n\t\t\t\t\t\tĐịa chỉ: {getAddress != null ? getAddress : \"Đang cập nhật\"}\n\t\t\t\t\t</Text>\n\t\t\t\t)}\n\t\t\t\t{response.postal.type == 2 && (\n\t\t\t\t\t<Text>\n\t\t\t\t\t\tĐịa chỉ: {response.postal.address != null ? response.postal.address : \"Đang cập nhật\"}\n\t\t\t\t\t</Text>\n\t\t\t\t)}\n\t\t\t</Card>\n\n\t\t\t{getLatitude != null && getLongtitude != null && (\n\t\t\t\t<MapView\n\t\t\t\t\tinitialRegion={{\n\t\t\t\t\t\tlatitude: getLatitude,\n\t\t\t\t\t\tlongitude: getLongtitude,\n\t\t\t\t\t\t// latitudeDelta: appConfigs.GOOGLE_MAP.latitudeDelta,\n\t\t\t\t\t\t// longitudeDelta: appConfigs.GOOGLE_MAP.longitudeDelta,\n\t\t\t\t\t\tlatitudeDelta: 0.009,\n\t\t\t\t\t\tlongitudeDelta: 0.001,\n\t\t\t\t\t}}\n\t\t\t\t\t//hiển thị chấm xanh\n\t\t\t\t\tshowsUserLocation={true}\n\t\t\t\t\tshowsMyLocationButton={true}\n\t\t\t\t\tfollowsUserLocation={true}\n\t\t\t\t\tshowsMyLocationButton={true}\n\t\t\t\t\tloadingEnabled={true}\n\t\t\t\t\tstyle={stylesX.mapStyle}\n\t\t\t\t\t// customMapStyle={mapStyle}\n\t\t\t\t>\n\t\t\t\t\t<MapView.Marker\n\t\t\t\t\t\ttitle={response.postal.name}\n\t\t\t\t\t\tkey={1}\n\t\t\t\t\t\tcoordinate={{\n\t\t\t\t\t\t\tlatitude: getLatitude,\n\t\t\t\t\t\t\tlongitude: getLongtitude,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</MapView>\n\t\t\t)}\n\t\t</View>\n\t);\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tstoreFav: function (favs) {\n\t\t\tdispatch({ type: \"updateFavs\", favs });\n\t\t},\n\t};\n}\n\nfunction mapStateToProps(state) {\n\treturn { favs: state.favs, token: state.token };\n}\n\nconst stylesX = StyleSheet.create({\n\tmapStyle: {\n\t\twidth: Dimensions.get(\"window\").width,\n\t\theight: 275,\n\t},\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailPostalScreen);\n"]},"metadata":{},"sourceType":"module"}