{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/account/phoneNumber/verifyPhoneNumber.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { connect } from \"react-redux\";\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from \"react-native-confirmation-code-field\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Text, Icon, Layout, MenuItem, OverflowMenu, TopNavigation, TopNavigationAction, Divider } from \"@ui-kitten/components\";\nimport styles, { ACTIVE_CELL_BG_COLOR, CELL_BORDER_RADIUS, CELL_SIZE, DEFAULT_CELL_BG_COLOR, NOT_EMPTY_CELL_BG_COLOR } from \"./styles\";\nimport HTTPRequest from \"../../../functions/httpRequest\";\nimport SMS from \"../../../functions/sms\";\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { MUTATION_CREATE_CODE_CONFIRM, QUERY_CHECK_CODE_CONFIRM, MUTATION_ACTIVE_USER } from \"../../../graphql/query\";\nvar Value = Animated.Value,\n    AnimatedText = Animated.Text;\nvar CELL_COUNT = 4;\nvar source = {\n  uri: \"https://user-images.githubusercontent.com/4661784/56352614-4631a680-61d8-11e9-880d-86ecb053413d.png\"\n};\n\nvar BackIcon = function BackIcon(props) {\n  return React.createElement(Icon, _extends({}, props, {\n    name: \"arrow-back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }));\n};\n\nvar animationsColor = _toConsumableArray(new Array(CELL_COUNT)).map(function () {\n  return new Value(0);\n});\n\nvar animationsScale = _toConsumableArray(new Array(CELL_COUNT)).map(function () {\n  return new Value(1);\n});\n\nvar animateCell = function animateCell(_ref) {\n  var hasValue = _ref.hasValue,\n      index = _ref.index,\n      isFocused = _ref.isFocused;\n  Animated.parallel([Animated.timing(animationsColor[index], {\n    useNativeDriver: false,\n    toValue: isFocused ? 1 : 0,\n    duration: 250\n  }), Animated.spring(animationsScale[index], {\n    useNativeDriver: false,\n    toValue: hasValue ? 0 : 1,\n    duration: hasValue ? 300 : 250\n  })]).start();\n};\n\nfunction VerifyPhoneNumberScreen(props) {\n  var _useMutation = useMutation(MUTATION_CREATE_CODE_CONFIRM, {\n    onCompleted: function onCompleted(dataCode) {\n      console.log(dataCode);\n      console.log(44, dataCode.insert_user_confirm_code.returning[0].id);\n\n      if (dataCode.insert_user_confirm_code.returning[0].id != null) {\n        console.log(\"just call\");\n        var phone = \"84\" + props.infos.phone.substring(1);\n        console.log(\"phone: \" + phone);\n        SMS.send({\n          message: dataCode.insert_user_confirm_code.returning[0].code + \" la ma xac minh dang ky Baotrixemay cua ban\",\n          phone: phone\n        }).then(function (response) {\n          console.log(\"response\");\n          console.log(response);\n        }).catch(function (error) {\n          console.log(\"error\");\n          console.log(error);\n        }).finally(function () {\n          console.log(\"finally\");\n        });\n      } else {\n        console.log(\"false id\");\n      }\n    },\n    onError: function onError(errorCode) {\n      console.log(\"onError\");\n      console.log(errorCode);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createCodeConfirm = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      errorCode = _useMutation2$.error,\n      calledCode = _useMutation2$.called,\n      loadingCode = _useMutation2$.loading,\n      dataCode = _useMutation2$.data;\n\n  var _useLazyQuery = useLazyQuery(QUERY_CHECK_CODE_CONFIRM, {\n    onCompleted: function onCompleted(dataConfirm) {\n      console.log(\"checkCodeConfirm\");\n      console.log(125, dataConfirm);\n\n      if (dataConfirm.user_confirm_code[0].id) {\n        activeUser({\n          variables: {\n            uid: dataConfirm.user_confirm_code[0].uid\n          }\n        });\n      }\n    },\n    onError: function onError(errorConfirm) {\n      console.log(\"onError\");\n      console.log(errorConfirm);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      checkCodeConfirm = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      errorConfirm = _useLazyQuery2$.error,\n      calledConfirm = _useLazyQuery2$.called,\n      loadingConfirm = _useLazyQuery2$.loading,\n      dataConfirm = _useLazyQuery2$.data;\n\n  var _useMutation3 = useMutation(MUTATION_ACTIVE_USER, {\n    onCompleted: function onCompleted(dataActive) {\n      console.log(\"activeUser\");\n      console.log(143, dataActive);\n\n      if (dataActive.update_users.returning[0].id != null) {\n        console.log(\"done confirm\");\n        props.storeUserInfo(dataActive.update_users.returning[0]);\n        console.log(158, dataActive.update_users.returning[0]);\n        setTimeout(function () {\n          Alert.alert(\"Đã xác thực tài khoản\");\n        }, 800);\n        props.navigation.navigate(\"More\");\n      }\n    },\n    onError: function onError(errorConfirm) {\n      console.log(\"onError\");\n      console.log(errorActive);\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      activeUser = _useMutation4[0],\n      _useMutation4$ = _useMutation4[1],\n      errorActive = _useMutation4$.error,\n      calledActive = _useMutation4$.called,\n      loadingActive = _useMutation4$.loading,\n      dataActive = _useMutation4$.data;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      countSMS = _useState2[0],\n      setCountSMS = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codeConfirm = _useState4[0],\n      setCodeConfirm = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSent = _useState6[0],\n      setIsSent = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: CELL_COUNT\n  });\n\n  var _useClearByFocusCell = useClearByFocusCell({\n    value: value,\n    setValue: setValue\n  }),\n      _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n      propsX = _useClearByFocusCell2[0],\n      getCellOnLayoutHandler = _useClearByFocusCell2[1];\n\n  var _useState9 = useState(60),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timeLeft = _useState10[0],\n      setTimeLeft = _useState10[1];\n\n  if (!props.infos.id) {\n    props.navigation.navigate(\"SignIn\");\n  }\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      var timeNew;\n\n      if (timeLeft > 0) {\n        timeNew = timeLeft - 1;\n      } else {\n        timeNew = timeLeft;\n      }\n\n      setTimeLeft(timeNew);\n    }, 1000);\n  });\n\n  function onCreateCodeConfirm() {\n    if (countSMS < 3) {\n      var newCount = countSMS + 1;\n      setCountSMS(newCount);\n      console.log(\"run onCreateCodeConfirm\");\n      var randomCode = Math.floor(1000 + Math.random() * 9000);\n      console.log(\"randomCode: \" + randomCode);\n      setCodeConfirm(randomCode);\n      setIsSent(true);\n      createCodeConfirm({\n        variables: {\n          code: parseInt(randomCode),\n          uid: parseInt(props.infos.id)\n        }\n      });\n    }\n  }\n\n  function onClickCheckCode() {\n    console.log(value);\n    console.log(\"onClickCheckCode\");\n\n    if (!value.trim()) {\n      Alert.alert(\"Vui lòng nhập mã xác nhận\");\n      return;\n    }\n\n    checkCodeConfirm({\n      variables: {\n        code: parseInt(value),\n        uid: props.infos.id\n      }\n    });\n  }\n\n  function onClickConfirm() {\n    Alert.alert(\"\", \"Mã xác nhận đã được gửi đến \" + props.infos.phone, [{\n      text: \"Đóng\",\n      style: \"cancel\"\n    }], {\n      cancelable: false\n    });\n    setTimeLeft(60);\n  }\n\n  var renderCell = function renderCell(_ref2) {\n    var index = _ref2.index,\n        symbol = _ref2.symbol,\n        isFocused = _ref2.isFocused;\n    var hasValue = Boolean(symbol);\n    var animatedCellStyle = {\n      backgroundColor: animationsColor[index].interpolate({\n        inputRange: [0, 1],\n        outputRange: [DEFAULT_CELL_BG_COLOR, ACTIVE_CELL_BG_COLOR]\n      }),\n      borderRadius: animationsScale[index].interpolate({\n        inputRange: [0, 1],\n        outputRange: [CELL_SIZE, CELL_BORDER_RADIUS]\n      }),\n      transform: []\n    };\n    setTimeout(function () {\n      animateCell({\n        hasValue: hasValue,\n        index: index,\n        isFocused: isFocused\n      });\n    }, 0);\n    return React.createElement(AnimatedText, {\n      key: index,\n      style: [styles.cell, animatedCellStyle],\n      onLayout: getCellOnLayoutHandler(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 4\n      }\n    }, symbol || (isFocused ? React.createElement(Cursor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }) : null));\n  };\n\n  var renderBackAction = function renderBackAction() {\n    return React.createElement(TopNavigationAction, {\n      icon: BackIcon,\n      onPress: function onPress() {\n        return props.navigation.navigate(\"More\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 3\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 3\n    }\n  }, React.createElement(TopNavigation, {\n    alignment: \"center\",\n    title: \"X\\xE1c th\\u1EF1c t\\xE0i kho\\u1EA3n\",\n    accessoryLeft: renderBackAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 4\n    }\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 4\n    }\n  }), React.createElement(View, {\n    style: {\n      marginHorizontal: 40,\n      marginTop: 70\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 4\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: source,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 5\n    }\n  }, \"Nh\\u1EADp m\\xE3 x\\xE1c nh\\u1EADn \\u0111\\u01B0\\u1EE3c g\\u1EEDi \\u0111\\u1EBFn \\u0111i\\u1EC7n tho\\u1EA1i c\\u1EE7a b\\u1EA1n\"), React.createElement(CodeField, _extends({\n    ref: ref\n  }, propsX, {\n    value: value,\n    onChangeText: setValue,\n    cellCount: CELL_COUNT,\n    rootStyle: styles.codeFieldRoot,\n    keyboardType: \"number-pad\",\n    textContentType: \"oneTimeCode\",\n    renderCell: renderCell,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 5\n    }\n  })), isSent == false && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onCreateCodeConfirm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.nextButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.nextButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 8\n    }\n  }, \"G\\u1EEDi m\\xE3 x\\xE1c nh\\u1EADn\"))), isSent == true && React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onClickCheckCode();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.nextButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.nextButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 8\n    }\n  }, \"X\\xE1c nh\\u1EADn\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return onClickConfirm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: timeLeft == 0 ? styles.resendActive : styles.resendInactive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 6\n    }\n  }, \"G\\u1EEDi l\\u1EA1i m\\xE3 (\", timeLeft, \" gi\\xE2y)\"))));\n}\n\nvar stylesX = StyleSheet.create({});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    storeUserInfo: function storeUserInfo(infos) {\n      dispatch({\n        type: \"saveUserInfo\",\n        infos: infos\n      });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    infos: state.infos\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyPhoneNumberScreen);","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/account/phoneNumber/verifyPhoneNumber.js"],"names":["React","useState","useEffect","connect","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","TouchableOpacity","Text","Icon","Layout","MenuItem","OverflowMenu","TopNavigation","TopNavigationAction","Divider","styles","ACTIVE_CELL_BG_COLOR","CELL_BORDER_RADIUS","CELL_SIZE","DEFAULT_CELL_BG_COLOR","NOT_EMPTY_CELL_BG_COLOR","HTTPRequest","SMS","useQuery","useLazyQuery","useMutation","MUTATION_CREATE_CODE_CONFIRM","QUERY_CHECK_CODE_CONFIRM","MUTATION_ACTIVE_USER","Value","Animated","AnimatedText","CELL_COUNT","source","uri","BackIcon","props","animationsColor","Array","map","animationsScale","animateCell","hasValue","index","isFocused","parallel","timing","useNativeDriver","toValue","duration","spring","start","VerifyPhoneNumberScreen","onCompleted","dataCode","console","log","insert_user_confirm_code","returning","id","phone","infos","substring","send","message","code","then","response","catch","error","finally","onError","errorCode","createCodeConfirm","calledCode","called","loadingCode","loading","data","dataConfirm","user_confirm_code","activeUser","variables","uid","errorConfirm","checkCodeConfirm","calledConfirm","loadingConfirm","dataActive","update_users","storeUserInfo","setTimeout","Alert","alert","navigation","navigate","errorActive","calledActive","loadingActive","countSMS","setCountSMS","codeConfirm","setCodeConfirm","isSent","setIsSent","value","setValue","ref","cellCount","propsX","getCellOnLayoutHandler","timeLeft","setTimeLeft","timer","timeNew","onCreateCodeConfirm","newCount","randomCode","Math","floor","random","parseInt","onClickCheckCode","trim","onClickConfirm","text","style","cancelable","renderCell","symbol","Boolean","animatedCellStyle","backgroundColor","interpolate","inputRange","outputRange","borderRadius","transform","cell","renderBackAction","root","marginHorizontal","marginTop","icon","subTitle","codeFieldRoot","nextButton","nextButtonText","resendActive","resendInactive","stylesX","StyleSheet","create","mapDispatchToProps","dispatch","type","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tAnimated,\n\tImage,\n\tSafeAreaView,\n\tView,\n\tStyleSheet,\n\tAlert,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\n\nimport {\n\tCodeField,\n\tCursor,\n\tuseBlurOnFulfill,\n\tuseClearByFocusCell,\n} from \"react-native-confirmation-code-field\";\n\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nimport {\n\tText,\n\tIcon,\n\tLayout,\n\tMenuItem,\n\tOverflowMenu,\n\tTopNavigation,\n\tTopNavigationAction,\n\tDivider,\n} from \"@ui-kitten/components\";\n\nimport styles, {\n\tACTIVE_CELL_BG_COLOR,\n\tCELL_BORDER_RADIUS,\n\tCELL_SIZE,\n\tDEFAULT_CELL_BG_COLOR,\n\tNOT_EMPTY_CELL_BG_COLOR,\n} from \"./styles\";\n\nimport HTTPRequest from \"../../../functions/httpRequest\";\nimport SMS from \"../../../functions/sms\";\n\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/client\";\nimport {\n\tMUTATION_CREATE_CODE_CONFIRM,\n\tQUERY_CHECK_CODE_CONFIRM,\n\tMUTATION_ACTIVE_USER,\n} from \"../../../graphql/query\";\n\nconst { Value, Text: AnimatedText } = Animated;\n\nconst CELL_COUNT = 4;\nconst source = {\n\turi:\n\t\t\"https://user-images.githubusercontent.com/4661784/56352614-4631a680-61d8-11e9-880d-86ecb053413d.png\",\n};\n\nconst BackIcon = (props) => <Icon {...props} name=\"arrow-back\" />;\n\nconst animationsColor = [...new Array(CELL_COUNT)].map(() => new Value(0));\nconst animationsScale = [...new Array(CELL_COUNT)].map(() => new Value(1));\nconst animateCell = ({ hasValue, index, isFocused }) => {\n\tAnimated.parallel([\n\t\tAnimated.timing(animationsColor[index], {\n\t\t\tuseNativeDriver: false,\n\t\t\ttoValue: isFocused ? 1 : 0,\n\t\t\tduration: 250,\n\t\t}),\n\t\tAnimated.spring(animationsScale[index], {\n\t\t\tuseNativeDriver: false,\n\t\t\ttoValue: hasValue ? 0 : 1,\n\t\t\tduration: hasValue ? 300 : 250,\n\t\t}),\n\t]).start();\n};\n\nfunction VerifyPhoneNumberScreen(props) {\n\t// console.log(70, props.infos);\n\n\tconst [\n\t\tcreateCodeConfirm,\n\t\t{\n\t\t\terror: errorCode,\n\t\t\tcalled: calledCode,\n\t\t\tloading: loadingCode,\n\t\t\tdata: dataCode,\n\t\t},\n\t] = useMutation(MUTATION_CREATE_CODE_CONFIRM, {\n\t\tonCompleted: (dataCode) => {\n\t\t\tconsole.log(dataCode);\n\t\t\tconsole.log(44, dataCode.insert_user_confirm_code.returning[0].id);\n\n\t\t\tif (dataCode.insert_user_confirm_code.returning[0].id != null) {\n\t\t\t\tconsole.log(\"just call\");\n\n\t\t\t\tlet phone = \"84\" + props.infos.phone.substring(1);\n\n\t\t\t\tconsole.log(\"phone: \" + phone);\n\n\t\t\t\tSMS.send({\n\t\t\t\t\tmessage:\n\t\t\t\t\t\tdataCode.insert_user_confirm_code.returning[0].code +\n\t\t\t\t\t\t\" la ma xac minh dang ky Baotrixemay cua ban\",\n\t\t\t\t\t// message: dataCode.insert_user_confirm_code.returning[0].code,\n\t\t\t\t\tphone: phone,\n\t\t\t\t})\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response\");\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.log(\"error\");\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tconsole.log(\"finally\");\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"false id\");\n\t\t\t}\n\t\t},\n\t\tonError: (errorCode) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorCode);\n\t\t},\n\t});\n\n\tconst [\n\t\tcheckCodeConfirm,\n\t\t{\n\t\t\terror: errorConfirm,\n\t\t\tcalled: calledConfirm,\n\t\t\tloading: loadingConfirm,\n\t\t\tdata: dataConfirm,\n\t\t},\n\t] = useLazyQuery(QUERY_CHECK_CODE_CONFIRM, {\n\t\tonCompleted: (dataConfirm) => {\n\t\t\tconsole.log(\"checkCodeConfirm\");\n\t\t\tconsole.log(125, dataConfirm);\n\n\t\t\tif (dataConfirm.user_confirm_code[0].id) {\n\t\t\t\tactiveUser({\n\t\t\t\t\tvariables: { uid: dataConfirm.user_confirm_code[0].uid },\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonError: (errorConfirm) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorConfirm);\n\t\t},\n\t});\n\n\tconst [\n\t\tactiveUser,\n\t\t{\n\t\t\terror: errorActive,\n\t\t\tcalled: calledActive,\n\t\t\tloading: loadingActive,\n\t\t\tdata: dataActive,\n\t\t},\n\t] = useMutation(MUTATION_ACTIVE_USER, {\n\t\tonCompleted: (dataActive) => {\n\t\t\tconsole.log(\"activeUser\");\n\t\t\tconsole.log(143, dataActive);\n\n\t\t\tif (dataActive.update_users.returning[0].id != null) {\n\t\t\t\tconsole.log(\"done confirm\");\n\n\t\t\t\t// var userData = props.infos;\n\t\t\t\t// console.log(\"is_actived\" + userData.is_actived);\n\t\t\t\t// userData[\"is_actived\"] = 1;\n\t\t\t\t// userData.is_actived = 2;\n\n\t\t\t\tprops.storeUserInfo(dataActive.update_users.returning[0]);\n\n\t\t\t\tconsole.log(158, dataActive.update_users.returning[0]);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tAlert.alert(\"Đã xác thực tài khoản\");\n\t\t\t\t}, 800);\n\t\t\t\tprops.navigation.navigate(\"More\");\n\t\t\t}\n\t\t},\n\t\tonError: (errorConfirm) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorActive);\n\t\t},\n\t});\n\n\tconst [countSMS, setCountSMS] = useState(0);\n\tconst [codeConfirm, setCodeConfirm] = useState(\"\");\n\tconst [isSent, setIsSent] = useState(false);\n\tconst [value, setValue] = useState(\"\");\n\tconst ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n\tconst [propsX, getCellOnLayoutHandler] = useClearByFocusCell({\n\t\tvalue,\n\t\tsetValue,\n\t});\n\n\tconst [timeLeft, setTimeLeft] = useState(60);\n\n\tif (!props.infos.id) {\n\t\tprops.navigation.navigate(\"SignIn\");\n\t}\n\n\tuseEffect(() => {\n\t\tconst timer = setTimeout(() => {\n\t\t\tlet timeNew;\n\t\t\tif (timeLeft > 0) {\n\t\t\t\ttimeNew = timeLeft - 1;\n\t\t\t} else {\n\t\t\t\ttimeNew = timeLeft;\n\t\t\t}\n\n\t\t\tsetTimeLeft(timeNew);\n\t\t}, 1000);\n\n\t\t// if (props.infos.is_actived == 0) {\n\t\t// \tonCreateCodeConfirm();\n\t\t// }\n\t});\n\n\t// function calculateTimeLeft() {\n\n\t// \tif (timeLeft > 0) {\n\t// \t\tset\n\t// \t}\n\n\t// \treturn timeLeft - 1\n\t// }\n\n\tfunction onCreateCodeConfirm() {\n\t\tif (countSMS < 3) {\n\t\t\tlet newCount = countSMS + 1;\n\t\t\tsetCountSMS(newCount);\n\n\t\t\tconsole.log(\"run onCreateCodeConfirm\");\n\n\t\t\tlet randomCode = Math.floor(1000 + Math.random() * 9000);\n\t\t\tconsole.log(\"randomCode: \" + randomCode);\n\t\t\tsetCodeConfirm(randomCode);\n\t\t\tsetIsSent(true);\n\n\t\t\tcreateCodeConfirm({\n\t\t\t\tvariables: {\n\t\t\t\t\tcode: parseInt(randomCode),\n\t\t\t\t\tuid: parseInt(props.infos.id),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction onClickCheckCode() {\n\t\tconsole.log(value);\n\t\tconsole.log(\"onClickCheckCode\");\n\n\t\tif (!value.trim()) {\n\t\t\tAlert.alert(\"Vui lòng nhập mã xác nhận\");\n\t\t\treturn;\n\t\t}\n\n\t\tcheckCodeConfirm({\n\t\t\tvariables: { code: parseInt(value), uid: props.infos.id },\n\t\t});\n\t}\n\n\tfunction onClickConfirm() {\n\t\tAlert.alert(\n\t\t\t\"\",\n\t\t\t\"Mã xác nhận đã được gửi đến \" + props.infos.phone,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\ttext: \"Đóng\",\n\t\t\t\t\t// onPress: () => console.log(\"Cancel Pressed\"),\n\t\t\t\t\tstyle: \"cancel\",\n\t\t\t\t},\n\t\t\t\t// { text: \"OK\", onPress: () => console.log(\"OK Pressed\") },\n\t\t\t],\n\t\t\t{ cancelable: false }\n\t\t);\n\n\t\tsetTimeLeft(60);\n\t}\n\n\tconst renderCell = ({ index, symbol, isFocused }) => {\n\t\tconst hasValue = Boolean(symbol);\n\t\tconst animatedCellStyle = {\n\t\t\tbackgroundColor: animationsColor[index].interpolate({\n\t\t\t\tinputRange: [0, 1],\n\t\t\t\toutputRange: [DEFAULT_CELL_BG_COLOR, ACTIVE_CELL_BG_COLOR],\n\t\t\t}),\n\t\t\tborderRadius: animationsScale[index].interpolate({\n\t\t\t\tinputRange: [0, 1],\n\t\t\t\toutputRange: [CELL_SIZE, CELL_BORDER_RADIUS],\n\t\t\t}),\n\t\t\ttransform: [\n\t\t\t\t// {\n\t\t\t\t// \tscale: animationsScale[index].interpolate({\n\t\t\t\t// \t\tinputRange: [0, 1],\n\t\t\t\t// \t\toutputRange: [0.2, 1],\n\t\t\t\t// \t}),\n\t\t\t\t// },\n\t\t\t],\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tanimateCell({ hasValue, index, isFocused });\n\t\t}, 0);\n\n\t\treturn (\n\t\t\t<AnimatedText\n\t\t\t\tkey={index}\n\t\t\t\tstyle={[styles.cell, animatedCellStyle]}\n\t\t\t\tonLayout={getCellOnLayoutHandler(index)}\n\t\t\t>\n\t\t\t\t{symbol || (isFocused ? <Cursor /> : null)}\n\t\t\t</AnimatedText>\n\t\t);\n\t};\n\n\tconst renderBackAction = () => (\n\t\t<TopNavigationAction\n\t\t\ticon={BackIcon}\n\t\t\tonPress={() => props.navigation.navigate(\"More\")}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<SafeAreaView style={styles.root}>\n\t\t\t<TopNavigation\n\t\t\t\talignment=\"center\"\n\t\t\t\ttitle=\"Xác thực tài khoản\"\n\t\t\t\taccessoryLeft={renderBackAction}\n\t\t\t\t// accessoryRight={renderRightActions}\n\t\t\t/>\n\t\t\t<Divider />\n\t\t\t<View style={{ marginHorizontal: 40, marginTop: 70 }}>\n\t\t\t\t<Image style={styles.icon} source={source} />\n\t\t\t\t<Text style={styles.subTitle}>\n\t\t\t\t\tNhập mã xác nhận được gửi đến điện thoại của bạn\n\t\t\t\t</Text>\n\n\t\t\t\t<CodeField\n\t\t\t\t\tref={ref}\n\t\t\t\t\t{...propsX}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChangeText={setValue}\n\t\t\t\t\tcellCount={CELL_COUNT}\n\t\t\t\t\trootStyle={styles.codeFieldRoot}\n\t\t\t\t\tkeyboardType=\"number-pad\"\n\t\t\t\t\ttextContentType=\"oneTimeCode\"\n\t\t\t\t\trenderCell={renderCell}\n\t\t\t\t/>\n\n\t\t\t\t{isSent == false && (\n\t\t\t\t\t<TouchableOpacity onPress={() => onCreateCodeConfirm()}>\n\t\t\t\t\t\t<View style={styles.nextButton}>\n\t\t\t\t\t\t\t<Text style={styles.nextButtonText}>\n\t\t\t\t\t\t\t\tGửi mã xác nhận\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t)}\n\n\t\t\t\t{isSent == true && (\n\t\t\t\t\t<TouchableOpacity onPress={() => onClickCheckCode()}>\n\t\t\t\t\t\t<View style={styles.nextButton}>\n\t\t\t\t\t\t\t<Text style={styles.nextButtonText}>Xác nhận</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t)}\n\t\t\t\t<TouchableOpacity onPress={() => onClickConfirm()}>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\ttimeLeft == 0\n\t\t\t\t\t\t\t\t? styles.resendActive\n\t\t\t\t\t\t\t\t: styles.resendInactive\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tGửi lại mã ({timeLeft} giây)\n\t\t\t\t\t</Text>\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n}\n\nconst stylesX = StyleSheet.create({\n\t// root: {flex: 1, padding: 20},\n\t// title: {textAlign: 'center', fontSize: 30},\n\t// codeFieldRoot: {marginTop: 30, textAlign: 'center',},\n\t// cell: {\n\t//   width: 40,\n\t//   height: 40,\n\t//   lineHeight: 38,\n\t//   fontSize: 24,\n\t//   borderWidth: 2,\n\t//   borderColor: '#00000030',\n\t//   textAlign: 'center',\n\t// },\n\t// focusCell: {\n\t//   borderColor: '#000',\n\t// },\n});\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tstoreUserInfo: function (infos) {\n\t\t\tdispatch({ type: \"saveUserInfo\", infos });\n\t\t},\n\t};\n}\n\nfunction mapStateToProps(state) {\n\treturn { infos: state.infos };\n}\n\n// keep this line at the end\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(VerifyPhoneNumberScreen);\n"]},"metadata":{},"sourceType":"module"}