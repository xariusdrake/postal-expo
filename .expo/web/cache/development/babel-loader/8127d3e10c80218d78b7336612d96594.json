{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/postal/createPostalLocation.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Divider, Input, Button, Text, Icon, TopNavigation, TopNavigationAction } from \"@ui-kitten/components\";\nimport appConfigs from \"../../config\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\n\nfunction CreatePostalLocationScreen(props) {\n  var navigation = useNavigation();\n\n  var renderIcon = function renderIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"home-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(ListItem, {\n      key: item.id,\n      title: \"\" + item.name,\n      description: \"\" + item.code,\n      onPress: function onPress() {\n        return navigation.navigate(\"Postal\", {\n          postal: item\n        });\n      },\n      accessoryLeft: renderIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }\n    });\n  };\n\n  var SearchIcon = function SearchIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"search-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  var BackIcon = function BackIcon(props) {\n    return React.createElement(Icon, _extends({}, props, {\n      name: \"arrow-back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }\n    }));\n  };\n\n  var renderBackAction = function renderBackAction() {\n    return React.createElement(TopNavigationAction, {\n      icon: BackIcon,\n      onPress: function onPress() {\n        return props.navigation.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      backgroundColor: \"#fff\",\n      height: Dimensions.get(\"window\").height,\n      paddingTop: Platform.OS === \"android\" ? 25 : 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, React.createElement(TopNavigation, {\n    alignment: \"center\",\n    title: \"Nh\\u1EADp \\u0111\\u1ECBa ch\\u1EC9 c\\u1EE7a b\\u1EA1n\",\n    accessoryLeft: renderBackAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }), React.createElement(GooglePlacesAutocomplete, {\n    placeholder: \"T\\xECm ki\\u1EBFm\",\n    query: {\n      key: appConfigs.GOOGLE_MAP.API_KEY_2,\n      language: \"vi\",\n      components: \"country:vn\"\n    },\n    onPress: function onPress(data) {\n      var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(data);\n      console.log(348, data.description);\n    },\n    onFail: function onFail(error) {\n      return console.error(error);\n    },\n    styles: {\n      textInputContainer: {\n        borderColor: \"#e4e6ef\",\n        padding: 10,\n        backgroundColor: \"#e4e6ef\"\n      },\n      textInput: {\n        borderColor: \"#e4e6ef\",\n        height: 38,\n        color: \"#5d5d5d\",\n        fontSize: 16\n      },\n      predefinedPlacesDescription: {\n        color: \"#1faadb\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({});\n\nfunction mapStateToProps(state) {\n  return {\n    favs: state.favs\n  };\n}\n\nexport default connect(mapStateToProps, null)(CreatePostalLocationScreen);","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/screens/postal/createPostalLocation.js"],"names":["React","useState","useEffect","connect","useNavigation","Divider","Input","Button","Text","Icon","TopNavigation","TopNavigationAction","appConfigs","Spinner","GooglePlacesAutocomplete","CreatePostalLocationScreen","props","navigation","renderIcon","renderItem","item","index","id","name","code","navigate","postal","SearchIcon","BackIcon","renderBackAction","goBack","backgroundColor","height","Dimensions","get","paddingTop","Platform","OS","key","GOOGLE_MAP","API_KEY_2","language","components","data","details","console","log","description","error","textInputContainer","borderColor","padding","textInput","color","fontSize","predefinedPlacesDescription","styles","StyleSheet","create","mapStateToProps","state","favs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tStyleSheet,\n\tScrollView,\n\tTouchableOpacity,\n\tDimensions,\n\tSafeAreaView,\n\tView,\n\tPlatform,\n} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n\tDivider,\n\tInput,\n\tButton,\n\tText,\n\tIcon,\n\tTopNavigation,\n\tTopNavigationAction,\n} from \"@ui-kitten/components\";\n\nimport appConfigs from \"../../config\";\n\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\n\nfunction CreatePostalLocationScreen(props) {\n\tconst navigation = useNavigation();\n\n\tconst renderIcon = (props) => <Icon {...props} name=\"home-outline\" />;\n\n\tlet renderItem = ({ item, index }) => {\n\t\treturn (\n\t\t\t<ListItem\n\t\t\t\tkey={item.id}\n\t\t\t\ttitle={`${item.name}`}\n\t\t\t\tdescription={`${item.code}`}\n\t\t\t\tonPress={() => navigation.navigate(\"Postal\", { postal: item })}\n\t\t\t\taccessoryLeft={renderIcon}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst SearchIcon = (props) => <Icon {...props} name=\"search-outline\" />;\n\tconst BackIcon = (props) => <Icon {...props} name=\"arrow-back\" />;\n\n\tconst renderBackAction = () => (\n\t\t<TopNavigationAction\n\t\t\ticon={BackIcon}\n\t\t\tonPress={() => props.navigation.goBack()}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<SafeAreaView\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: \"#fff\",\n\t\t\t\theight: Dimensions.get(\"window\").height,\n\t\t\t\tpaddingTop: Platform.OS === \"android\" ? 25 : 0,\n\t\t\t}}\n\t\t>\n\t\t\t<TopNavigation\n\t\t\t\talignment=\"center\"\n\t\t\t\ttitle=\"Nhập địa chỉ của bạn\"\n\t\t\t\taccessoryLeft={renderBackAction}\n\t\t\t\t// accessoryRight={renderRightActions}\n\t\t\t/>\n\t\t\t<Divider />\n\n\t\t\t<GooglePlacesAutocomplete\n\t\t\t\tplaceholder=\"Tìm kiếm\"\n\t\t\t\tquery={{\n\t\t\t\t\tkey: appConfigs.GOOGLE_MAP.API_KEY_2,\n\t\t\t\t\tlanguage: \"vi\", // language of the results\n\t\t\t\t\tcomponents: \"country:vn\",\n\t\t\t\t}}\n\t\t\t\tonPress={(data, details = null) => {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tconsole.log(348, data.description);\n\t\t\t\t\t// setAddressInput(data.description);\n\t\t\t\t\t// fetchGeocode(data.description);\n\t\t\t\t}}\n\t\t\t\tonFail={(error) => console.error(error)}\n\t\t\t\t// requestUrl={{\n\t\t\t\t// \turl:\n\t\t\t\t// \t\t\"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api\",\n\t\t\t\t// \tuseOnPlatform: \"web\",\n\t\t\t\t// }} // this in only required for use on the web. See https://git.io/JflFv more for details.\n\t\t\t\t// currentLocation={true}\n\t\t\t\t// currentLocationLabel=\"Hiện tại\"\n\t\t\t\tstyles={{\n\t\t\t\t\ttextInputContainer: {\n\t\t\t\t\t\tborderColor: \"#e4e6ef\",\n\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\tbackgroundColor: \"#e4e6ef\",\n\t\t\t\t\t},\n\t\t\t\t\ttextInput: {\n\t\t\t\t\t\tborderColor: \"#e4e6ef\",\n\t\t\t\t\t\theight: 38,\n\t\t\t\t\t\tcolor: \"#5d5d5d\",\n\t\t\t\t\t\tfontSize: 16,\n\t\t\t\t\t},\n\t\t\t\t\tpredefinedPlacesDescription: {\n\t\t\t\t\t\tcolor: \"#1faadb\",\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t/>\n\t\t</SafeAreaView>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\t// attachButton: {\n\t// \tborderRadius: 24,\n\t// \tmarginHorizontal: 8,\n\t// },\n});\n\nfunction mapStateToProps(state) {\n\treturn { favs: state.favs };\n}\n\nexport default connect(mapStateToProps, null)(CreatePostalLocationScreen);\n"]},"metadata":{},"sourceType":"module"}