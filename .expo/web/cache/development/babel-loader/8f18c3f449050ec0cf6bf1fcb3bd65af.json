{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from \"expo-permissions\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { QUERY_SEARCH_ALL_POSTAL_PLACE } from \"../graphql/query\";\nimport { Text, Input, Button } from \"@ui-kitten/components\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport appConfigs from \"../config\";\n\nvar iconQR = function iconQR() {\n  return React.createElement(MaterialCommunityIcons, {\n    name: \"barcode-scan\",\n    size: 24,\n    color: \"#1da1f2\",\n    style: {\n      marginRight: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  });\n};\n\nfunction SearchScreen(props) {\n  var _useLazyQuery = useLazyQuery(QUERY_SEARCH_ALL_POSTAL_PLACE, {\n    onCompleted: function onCompleted(dataSearch) {\n      console.log(\"onCompleted\");\n      console.log(dataSearch);\n\n      if (dataSearch.postals.length === 0) {\n        setNoResultFound(true);\n      } else {\n        setNoResultFound(false);\n        navigation.navigate(\"SearchedResults\", {\n          placesArray: dataSearch.postals\n        });\n      }\n    },\n    onError: function onError(errorSearch) {\n      console.log(\"onError\");\n      console.log(errorSearch);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      searchPostal = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      networkStatus = _useLazyQuery2$.networkStatus,\n      errorSearch = _useLazyQuery2$.error,\n      calledSearch = _useLazyQuery2$.called,\n      loadingSearch = _useLazyQuery2$.loading,\n      dataSearch = _useLazyQuery2$.data;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      valueSearch = _useState2[0],\n      setValueSearch = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loader = _useState4[0],\n      setLoader = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      noResultFound = _useState6[0],\n      setNoResultFound = _useState6[1];\n\n  function findProducts() {\n    return _regeneratorRuntime.async(function findProducts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(73, valueSearch);\n\n            if (valueSearch != \"\") {\n              searchPostal({\n                variables: {\n                  name: \"%\" + valueSearch + \"%\"\n                }\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (noResultFound == false) {\n    return React.createElement(View, {\n      style: _objectSpread({}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 4\n      }\n    }, React.createElement(Spinner, {\n      visible: loadingSearch == 1 ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }), React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.current20), {}, {\n        marginBottom: 10\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }\n    }, \"T\\xECm ki\\u1EBFm\"), React.createElement(Input, {\n      onChangeText: function onChangeText(text) {\n        return setValueSearch(text);\n      },\n      placeholder: \"\",\n      style: {\n        width: \"100%\",\n        marginBottom: 15,\n        borderColor: '#1da1f2'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }), React.createElement(Button, {\n      size: \"small\",\n      status: \"info\",\n      onPress: function onPress() {\n        findProducts();\n      },\n      style: {\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, \"T\\xECm\"), React.createElement(Button, {\n      size: \"small\",\n      appearance: \"outline\",\n      status: \"info\",\n      accessoryLeft: iconQR,\n      onPress: function onPress() {\n        navigation.navigate(\"ScanQR\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }\n    }, \"Qu\\xE9t m\\xE3 QR\"), React.createElement(StatusBar, {\n      style: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }));\n  } else if (noResultFound) {\n    return React.createElement(View, {\n      style: _objectSpread({}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 4\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.current20), {}, {\n        textAlign: \"center\",\n        paddingBottom: 20\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }\n    }, \"Kh\\xF4ng t\\xECm th\\u1EA5y\", \" \", React.createElement(Text, {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 6\n      }\n    }, valueSearch)), React.createElement(Button, {\n      size: \"small\",\n      onPress: function onPress() {\n        setNoResultFound(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 5\n      }\n    }, \"Th\\u1EED l\\u1EA1i\"), React.createElement(StatusBar, {\n      style: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }\n    }));\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 25,\n    backgroundColor: \"#FFFFFF\"\n  },\n  loadingView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  current20: {\n    color: \"#033C47\",\n    fontSize: 20\n  }\n});\nexport default SearchScreen;","map":{"version":3,"sources":["/Users/nemonodoy/DATA/Source/PostalCode/postal-mobile/screens/search.js"],"names":["React","useState","useEffect","Permissions","StatusBar","BarCodeScanner","MaterialCommunityIcons","useNavigation","useQuery","useLazyQuery","QUERY_SEARCH_ALL_POSTAL_PLACE","Text","Input","Button","Spinner","appConfigs","iconQR","marginRight","SearchScreen","props","onCompleted","dataSearch","console","log","postals","length","setNoResultFound","navigation","navigate","placesArray","onError","errorSearch","searchPostal","networkStatus","error","calledSearch","called","loadingSearch","loading","data","valueSearch","setValueSearch","loader","setLoader","noResultFound","findProducts","variables","name","styles","container","current20","marginBottom","text","width","borderColor","textAlign","paddingBottom","fontWeight","StyleSheet","create","flex","justifyContent","alignItems","paddingHorizontal","backgroundColor","loadingView","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tStyleSheet,\n\tImage,\n\tView,\n\tTouchableOpacity,\n\tImageBackground,\n\tTouchableWithoutFeedback,\n\tKeyboard,\n\tKeyboardAvoidingView,\n\tDimensions,\n\tAlert,\n} from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\nimport { QUERY_SEARCH_ALL_POSTAL_PLACE } from \"../graphql/query\";\n\nimport { Text, Input, Button } from \"@ui-kitten/components\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nimport appConfigs from \"../config\";\n\nconst iconQR = () => {\n\treturn (\n\t\t<MaterialCommunityIcons\n\t\t\tname=\"barcode-scan\"\n\t\t\tsize={24}\n\t\t\tcolor=\"#1da1f2\"\n\t\t\tstyle={{ marginRight: 8 }}\n\t\t/>\n\t);\n};\n\n\n\n\nfunction SearchScreen(props) {\n\tconst [\n\t\tsearchPostal,\n\t\t{\n\t\t\tnetworkStatus,\n\t\t\terror: errorSearch,\n\t\t\tcalled: calledSearch,\n\t\t\tloading: loadingSearch,\n\t\t\tdata: dataSearch,\n\t\t},\n\t] = useLazyQuery(QUERY_SEARCH_ALL_POSTAL_PLACE, {\n\t\tonCompleted: (dataSearch) => {\n\t\t\tconsole.log(\"onCompleted\");\n\t\t\tconsole.log(dataSearch);\n\n\t\t\tif (dataSearch.postals.length === 0) {\n\t\t\t\tsetNoResultFound(true);\n\t\t\t} else {\n\t\t\t\tsetNoResultFound(false);\n\t\t\t\tnavigation.navigate(\"SearchedResults\", {\n\t\t\t\t\tplacesArray: dataSearch.postals,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// setAllPostalList(data.postals);\n\t\t},\n\t\tonError: (errorSearch) => {\n\t\t\tconsole.log(\"onError\");\n\t\t\tconsole.log(errorSearch);\n\t\t},\n\t});\n\n\tconst navigation = useNavigation();\n\n\tconst [valueSearch, setValueSearch] = useState(\"\");\n\tconst [loader, setLoader] = useState(false);\n\tconst [noResultFound, setNoResultFound] = useState(false);\n\n\tasync function findProducts() {\n\t\tconsole.log(73, valueSearch);\n\n\t\tif (valueSearch != \"\") {\n\t\t\tsearchPostal({ variables: { name: \"%\" + valueSearch + \"%\" } });\n\n\t\t\t// HTTPRequest.post({\n\t\t\t// \turl: \"/\",\n\t\t\t// \tdata: {\n\t\t\t// \t\tquery: QUERY_SEARCH_ALL_POSTAL_PLACE,\n\t\t\t// \t\tvariables: {\n\t\t\t// \t\t\tname: \"%\" + keyProducts + \"%\",\n\t\t\t// \t\t},\n\t\t\t// \t\toperationName: \"Mobile_SearchAllPostalPlace\",\n\t\t\t// \t},\n\t\t\t// })\n\t\t\t// \t.then((response) => {\n\t\t\t// \t\t// setScanMode(false);\n\t\t\t// \t\tconsole.log(102, response.data.data.postals);\n\n\t\t\t// \t\tif (response.data.data.postals.length === 0) {\n\t\t\t// \t\t\tsetNoResultFound(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\tsetNoResultFound(false);\n\t\t\t// \t\t\tnavigation.navigate(\"SearchedResults\", {\n\t\t\t// \t\t\t\tplacesArray: response.data.data.postals,\n\t\t\t// \t\t\t});\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((error) => {})\n\t\t\t// \t.finally(() => {});\n\t\t}\n\t}\n\n\tif (noResultFound == false) {\n\t\treturn (\n\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t<Spinner visible={loadingSearch == 1 ? true : false} />\n\t\t\t\t<Text style={{ ...styles.current20, marginBottom: 10 }}>Tìm kiếm</Text>\n\n\t\t\t\t<Input\n\t\t\t\t\tonChangeText={(text) => setValueSearch(text)}\n\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\tstyle={{ width: \"100%\", marginBottom: 15, borderColor: '#1da1f2' }}\n\t\t\t\t/>\n\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tstatus=\"info\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tfindProducts();\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ marginBottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\tTìm\n\t\t\t\t</Button>\n\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tappearance=\"outline\"\n\t\t\t\t\tstatus=\"info\"\n\t\t\t\t\taccessoryLeft={iconQR}\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tnavigation.navigate(\"ScanQR\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tQuét mã QR\n\t\t\t\t</Button>\n\t\t\t\t<StatusBar style=\"auto\" />\n\t\t\t</View>\n\t\t);\n\t} else if (noResultFound) {\n\t\treturn (\n\t\t\t<View style={{ ...styles.container }}>\n\t\t\t\t<Text\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...styles.current20,\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tpaddingBottom: 20,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tKhông tìm thấy{\" \"}\n\t\t\t\t\t<Text style={{ fontWeight: \"bold\" }}>{valueSearch}</Text>\n\t\t\t\t</Text>\n\n\t\t\t\t<Button\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\tsetNoResultFound(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tThử lại\n\t\t\t\t</Button>\n\n\t\t\t\t<StatusBar style=\"auto\" />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tpaddingHorizontal: 25,\n\t\tbackgroundColor: \"#FFFFFF\",\n\t},\n\tloadingView: {\n\t\tflex: 1,\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\tbackgroundColor: \"transparent\",\n\t},\n\tcurrent20: {\n\t\tcolor: \"#033C47\",\n\t\tfontSize: 20,\n\t},\n});\n\n// keep this line at the end\nexport default SearchScreen;\n"]},"metadata":{},"sourceType":"module"}