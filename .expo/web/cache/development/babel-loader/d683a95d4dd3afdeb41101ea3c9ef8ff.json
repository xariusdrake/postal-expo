{"ast":null,"code":"import Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport isValidCoordinates from 'is-valid-coordinates';\nvar PLATFORM = Platform.OS;\nexport var OpenMapDirections = function OpenMapDirections() {\n  var frmCoord = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var toCoord = arguments.length > 1 ? arguments[1] : undefined;\n  var transportType = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    var _toCoord;\n\n    var _frmCoord = _checkParameters(frmCoord) !== null ? \"?saddr=\" + _checkParameters(frmCoord) : '';\n\n    if (_checkParameters(toCoord) !== null) {\n      _toCoord = (_frmCoord.length == 0 ? '?' : '&') + (\"daddr=\" + _checkParameters(toCoord));\n    } else {\n      throw new Error('You need to pass a valid endpoint(number)');\n    }\n\n    ;\n\n    var _transportType = _checkTransportParameter(transportType) !== null ? \"&dirflg=\" + _checkTransportParameter(transportType) : '';\n\n    var url = \"\" + (PLATFORM === 'ios' ? \"https://maps.apple.com/\" : 'https://maps.google.com/') + _frmCoord + _toCoord + _transportType;\n\n    _openApp(url).then(function (result) {\n      resolve(result);\n    });\n  });\n};\n\nvar _openApp = function _openApp(url) {\n  return new Promise(function (resolve, reject) {\n    Linking.canOpenURL(url).then(function (res) {\n      Linking.openURL(url).then(function (result) {\n        resolve('opening app....');\n      }).catch(function (err) {\n        reject('Cannot link app!!!');\n      });\n    }).catch(function (err) {\n      reject('Cannot open app!!!');\n    });\n  });\n};\n\nvar _checkParameters = function _checkParameters(param) {\n  if (param === null || param === undefined || typeof param.latitude === 'string' || typeof param.longitude === 'string') {\n    return null;\n  }\n\n  if (isValidCoordinates.longitude(param.longitude) && isValidCoordinates.latitude(param.latitude)) {\n    return param.latitude + \",\" + param.longitude;\n  }\n\n  return null;\n};\n\nvar _checkTransportParameter = function _checkTransportParameter(param) {\n  var _transportType = param.toLowerCase();\n\n  if (_transportType === 'd' || _transportType === 'w' || _transportType === 'r' || _transportType === 'b') {\n    return _transportType;\n  }\n\n  return 'w';\n};","map":{"version":3,"sources":["/Users/xrs/DATA/Project/postalvn/postal-mobile/node_modules/react-native-navigation-directions/index.js"],"names":["isValidCoordinates","PLATFORM","Platform","OS","OpenMapDirections","frmCoord","toCoord","transportType","Promise","resolve","reject","_toCoord","_frmCoord","_checkParameters","length","Error","_transportType","_checkTransportParameter","url","_openApp","then","result","Linking","canOpenURL","res","openURL","catch","err","param","undefined","latitude","longitude","toLowerCase"],"mappings":"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","sourcesContent":["import { Linking, Platform } from 'react-native';\nimport isValidCoordinates from 'is-valid-coordinates';\n\nconst PLATFORM = Platform.OS;\n\nexport const OpenMapDirections = (frmCoord = null, toCoord, transportType) => new Promise((resolve, reject) => {\n\tlet _toCoord;\n\tconst _frmCoord = _checkParameters(frmCoord) !== null ? `?saddr=${_checkParameters(frmCoord)}` : '';\n\tif (_checkParameters(toCoord) !== null) {\n\t\t_toCoord = (_frmCoord.length == 0 ? '?' : '&') + `daddr=${_checkParameters(toCoord)}`\n\t} else {\n\t\tthrow new Error('You need to pass a valid endpoint(number)')\n\t};\n\tconst _transportType = _checkTransportParameter(transportType) !== null ? `&dirflg=${_checkTransportParameter(transportType)}` : '';\n\tconst url = `${PLATFORM === 'ios' ? `https://maps.apple.com/` : 'https://maps.google.com/'}${_frmCoord}${_toCoord}${_transportType}`;\n\t_openApp(url).then(result => { resolve(result) });\n});\n\nconst _openApp = (url) => new Promise((resolve, reject) => {\n\tLinking.canOpenURL(url)\n\t\t.then(res => {\n\t\t\tLinking.openURL(url)\n\t\t\t\t.then(result => {\n\t\t\t\t\tresolve('opening app....');\n\t\t\t\t}).catch(err => { reject('Cannot link app!!!'); })\n\t\t}).catch(err => {\n\t\t\treject('Cannot open app!!!');\n\t\t})\n});\n\nconst _checkParameters = (param) => {\n\tif (param === null || param === undefined || typeof param.latitude === 'string' || typeof param.longitude === 'string') { return null; }\n\n\tif (isValidCoordinates.longitude(param.longitude) && isValidCoordinates.latitude(param.latitude)) {\n\t\treturn `${param.latitude},${param.longitude}`\n\t}\n\n\treturn null;\n}\n\nconst _checkTransportParameter = (param) => {\n\tconst _transportType = param.toLowerCase();\n\tif (_transportType === 'd' || _transportType === 'w' || _transportType === 'r' || _transportType === 'b') {\n\t\treturn _transportType;\n\t}\n\n\treturn 'w';\n}\n"]},"metadata":{},"sourceType":"module"}