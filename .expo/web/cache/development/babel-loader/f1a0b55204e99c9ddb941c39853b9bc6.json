{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { CountryProvider, DEFAULT_COUNTRY_CONTEXT } from \"./CountryContext\";\nimport { ThemeProvider, DEFAULT_THEME } from \"./CountryTheme\";\nimport { CountryPicker } from \"./CountryPicker\";\n\nvar Main = function Main(_ref) {\n  var theme = _ref.theme,\n      translation = _ref.translation,\n      props = _objectWithoutProperties(_ref, [\"theme\", \"translation\"]);\n\n  return React.createElement(ThemeProvider, {\n    theme: _objectSpread(_objectSpread({}, DEFAULT_THEME), theme)\n  }, React.createElement(CountryProvider, {\n    value: _objectSpread(_objectSpread({}, DEFAULT_COUNTRY_CONTEXT), {}, {\n      translation: translation\n    })\n  }, React.createElement(CountryPicker, _extends({}, props))));\n};\n\nMain.defaultProps = {\n  onSelect: function onSelect() {},\n  withEmoji: true\n};\nexport default Main;\nexport { getCountriesAsync as getAllCountries, getCountryCallingCodeAsync as getCallingCode } from \"./CountryService\";\nexport { CountryModal } from \"./CountryModal\";\nexport { DARK_THEME, DEFAULT_THEME } from \"./CountryTheme\";\nexport { CountryFilter } from \"./CountryFilter\";\nexport { CountryList } from \"./CountryList\";\nexport { FlagButton } from \"./FlagButton\";\nexport { Flag } from \"./Flag\";\nexport { HeaderModal } from \"./HeaderModal\";\nexport { CountryModalProvider } from \"./CountryModalProvider\";\nexport * from \"./types\";","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP,MAAiC,OAAjC;AASA,SAAS,eAAT,EAA0B,uBAA1B;AACA,SAAS,aAAT,EAAwB,aAAxB;AAGA,SAAS,aAAT;;AAoCA,IAAM,IAAI,GAAG,SAAP,IAAO,OAA4C;AAAA,MAAzC,KAAyC,QAAzC,KAAyC;AAAA,MAAlC,WAAkC,QAAlC,WAAkC;AAAA,MAAlB,KAAkB;;AACvD,SACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,IAAA,KAAK,kCAAO,aAAP,GAAyB,KAAzB;AAAN,GAAd,EACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,IAAA,KAAK,kCAAO,uBAAP;AAAgC,MAAA,WAAW,EAAX;AAAhC;AAAN,GAAhB,EACE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,SAAA,EAAA,EAAK,KAAL,CAAd,CADF,CADF,CADF;AAOD,CARD;;AAUA,IAAI,CAAC,YAAL,GAAoB;AAClB,EAAA,QAAQ,EAAE,oBAAK,CAAG,CADA;AAElB,EAAA,SAAS,EAAE;AAFO,CAApB;AAKA,eAAe,IAAf;AACA,SACE,iBAAiB,IAAI,eADvB,EAEE,0BAA0B,IAAI,cAFhC;AAIA,SAAS,YAAT;AACA,SAAS,UAAT,EAAqB,aAArB;AACA,SAAS,aAAT;AACA,SAAS,WAAT;AACA,SAAS,UAAT;AACA,SAAS,IAAT;AACA,SAAS,WAAT;AACA,SAAS,oBAAT;AACA","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { CountryProvider, DEFAULT_COUNTRY_CONTEXT } from './CountryContext';\nimport { ThemeProvider, DEFAULT_THEME } from './CountryTheme';\nimport { CountryPicker } from './CountryPicker';\nconst Main = ({ theme, translation, ...props }) => {\n    return (React.createElement(ThemeProvider, { theme: { ...DEFAULT_THEME, ...theme } },\n        React.createElement(CountryProvider, { value: { ...DEFAULT_COUNTRY_CONTEXT, translation } },\n            React.createElement(CountryPicker, Object.assign({}, props)))));\n};\nMain.defaultProps = {\n    onSelect: () => { },\n    withEmoji: true,\n};\nexport default Main;\nexport { getCountriesAsync as getAllCountries, getCountryCallingCodeAsync as getCallingCode, } from './CountryService';\nexport { CountryModal } from './CountryModal';\nexport { DARK_THEME, DEFAULT_THEME } from './CountryTheme';\nexport { CountryFilter } from './CountryFilter';\nexport { CountryList } from './CountryList';\nexport { FlagButton } from './FlagButton';\nexport { Flag } from './Flag';\nexport { HeaderModal } from './HeaderModal';\nexport { CountryModalProvider } from './CountryModalProvider';\nexport * from './types';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}